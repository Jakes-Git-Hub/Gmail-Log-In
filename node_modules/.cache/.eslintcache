[{"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\index.js":"1","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\App.js":"2","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreatePasswordStaticElementContainer.js":"3","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\utils\\userIPModule.js":"4","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\FrontPageStaticContainer.js":"5","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\SignInFrontPageContainer.js":"6","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\ConfirmYoureNotARobotContainer.js":"7","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\StaticElementContainer.js":"8","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreateAccountContainer.js":"9","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\AddRecoveryEmailContainer.js":"10","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\ChooseYourGmailAddressContainer.js":"11","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\MockMailContainer.js":"12","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\AddPhoneNumberContainer.js":"13","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreatePasswordContainer.js":"14","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\BirthdayAndGenderContainer.js":"15","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreateAccountComponent.js":"16","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\SignInFrontPageComponent.js":"17","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\StaticElementComponent.js":"18","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreatePasswordStaticElementComponent.js":"19","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\FrontPageStaticComponent.js":"20","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\ConfirmYoureNotARobotComponent.js":"21","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\MockMail.js":"22","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\ChooseYourGmailAddressComponent.js":"23","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreatePasswordComponent.js":"24","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\AddRecoveryEmailComponent.js":"25","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\AddPhoneNumberComponent.js":"26","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\BirthdayAndGenderComponent.js":"27","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\hooks\\useImagePreload.js":"28","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\images\\flags\\importSVGs.js":"29","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CustomNextButton.js":"30","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\utils\\countryDropDownOptions.js":"31"},{"size":207,"mtime":1700653265227,"results":"32","hashOfConfig":"33"},{"size":4996,"mtime":1703071334818,"results":"34","hashOfConfig":"33"},{"size":764,"mtime":1700653265603,"results":"35","hashOfConfig":"33"},{"size":518,"mtime":1700653270442,"results":"36","hashOfConfig":"33"},{"size":625,"mtime":1700653265634,"results":"37","hashOfConfig":"33"},{"size":3169,"mtime":1700653265666,"results":"38","hashOfConfig":"33"},{"size":9058,"mtime":1703764497284,"results":"39","hashOfConfig":"33"},{"size":694,"mtime":1700653265681,"results":"40","hashOfConfig":"33"},{"size":2814,"mtime":1702462389362,"results":"41","hashOfConfig":"33"},{"size":3674,"mtime":1700653265509,"results":"42","hashOfConfig":"33"},{"size":2030,"mtime":1703072062469,"results":"43","hashOfConfig":"33"},{"size":363,"mtime":1700653265650,"results":"44","hashOfConfig":"33"},{"size":9984,"mtime":1703755450653,"results":"45","hashOfConfig":"33"},{"size":4344,"mtime":1703677227117,"results":"46","hashOfConfig":"33"},{"size":5387,"mtime":1703868659872,"results":"47","hashOfConfig":"33"},{"size":4254,"mtime":1702808633684,"results":"48","hashOfConfig":"33"},{"size":2689,"mtime":1700653265431,"results":"49","hashOfConfig":"33"},{"size":524,"mtime":1700653265446,"results":"50","hashOfConfig":"33"},{"size":572,"mtime":1700653265368,"results":"51","hashOfConfig":"33"},{"size":869,"mtime":1700653265399,"results":"52","hashOfConfig":"33"},{"size":3674,"mtime":1703762020464,"results":"53","hashOfConfig":"33"},{"size":286,"mtime":1700653265415,"results":"54","hashOfConfig":"33"},{"size":4488,"mtime":1703151016914,"results":"55","hashOfConfig":"33"},{"size":8408,"mtime":1703676404451,"results":"56","hashOfConfig":"33"},{"size":2939,"mtime":1700653265290,"results":"57","hashOfConfig":"33"},{"size":5327,"mtime":1700653265258,"results":"58","hashOfConfig":"33"},{"size":17611,"mtime":1703067184551,"results":"59","hashOfConfig":"33"},{"size":350,"mtime":1700653265713,"results":"60","hashOfConfig":"33"},{"size":296,"mtime":1700653267850,"results":"61","hashOfConfig":"33"},{"size":746,"mtime":1703677052561,"results":"62","hashOfConfig":"33"},{"size":29610,"mtime":1703762932160,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1t6ddkw",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"67"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"67"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"67"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\index.js",[],[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\App.js",["165"],[],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useUserIP } from './utils/userIPModule';\nimport { FrontPageStaticContainer } from './containers/FrontPageStaticContainer'\nimport { StaticElementContainer } from \"./containers/StaticElementContainer\";\nimport { CreatePasswordStaticElementContainer } from \"./containers/CreatePasswordStaticElementContainer\";\nimport { SignInFrontPageContainer } from \"./containers/SignInFrontPageContainer\";\nimport { MockMailContainer } from \"./containers/MockMailContainer\";\nimport { CreateAccountContainer } from \"./containers/CreateAccountContainer\";\nimport { BirthdayAndGenderContainer } from \"./containers/BirthdayAndGenderContainer\";\nimport { ChooseYourGmailAddressContainer } from \"./containers/ChooseYourGmailAddressContainer\";\nimport { CreatePasswordContainer } from \"./containers/CreatePasswordContainer\";\nimport { ConfirmYoureNotARobotContainer } from \"./containers/ConfirmYoureNotARobotContainer\"\nimport { AddPhoneNumberContainer } from \"./containers/AddPhoneNumberContainer\"\nimport { AddRecoveryEmailContainer } from \"./containers/AddRecoveryEmailContainer\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentLoggedInUser, setCurrentLoggedInUser] = useState(null);\n  const [nextUserId, setNextUserId] = useState(1);\n  const [userData, setUserData] = useState({});\n\n// Test\n\nuseEffect(() => { \n  setUsers(prevUsers => [...prevUsers, { id: 0, email: 'tester@gmail.com', password: 'test' }]);\n}, []);\n\n// Grab User's IP\n\nconst { userIP } = useUserIP()\n\n// Handle Log In\n\n  const handleLogin = (email, password) => {\n    console.log(\"Attempting login with:\", email, password);\n    const correctLoginCredentials = users.find(\n      (user) => user.email === email && user.password === password\n    );\n\n    if (correctLoginCredentials) {\n      setLoggedIn(true);\n      setCurrentLoggedInUser(correctLoginCredentials.email);\n      console.log(\"Logged in as:\", correctLoginCredentials.email);\n    } else {\n      console.log(\"Invalid credentials\");\n    }\n  };\n\n  const updateUser = (data) => {\n    setUserData(prevData => ({ ...prevData, ...data }));\n  };\n\n  const addUser = () => {\n    const newUser = {\n      id: nextUserId,\n      ...userData\n    };\n    setUsers(prevUsers => [...prevUsers, newUser]);\n    setUserData({}); // Clear temporary user data\n    setNextUserId(prevId => prevId + 1); // Increment nextUserId\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n            <FrontPageStaticContainer>\n              <SignInFrontPageContainer \n                users={users}\n                handleLogin={handleLogin}\n                userIP={userIP}\n              />\n            </FrontPageStaticContainer>\n          } />\n        <Route \n          path=\"/mockmail\" \n          element={<MockMailContainer   \n                    loggedIn={loggedIn}\n                    currentLoggedInUser={currentLoggedInUser}\n                   />} \n        />\n        <Route path=\"/create-account\" element={\n            <StaticElementContainer>\n              <CreateAccountContainer \n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/basic-information\" element={\n              <BirthdayAndGenderContainer\n                updateUser={updateUser} \n              />\n          } \n        />\n        <Route path=\"/choose-your-gmail-address\" element={\n            <StaticElementContainer>\n              <ChooseYourGmailAddressContainer\n                updateUser={updateUser} \n                users={users}\n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/create-password\" element={\n            <CreatePasswordStaticElementContainer>\n              <CreatePasswordContainer\n                updateUser={updateUser} \n                users={users}\n              />\n            </CreatePasswordStaticElementContainer>\n          } \n        />\n        <Route path=\"/confirm-youre-not-a-robot\" element={\n            <StaticElementContainer>\n              <ConfirmYoureNotARobotContainer\n                updateUser={updateUser}\n                userIP={userIP}\n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/add-recovery-email\" element={\n            <StaticElementContainer>\n              <AddRecoveryEmailContainer\n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/add-phone-number\" element={\n            <StaticElementContainer>\n              <AddPhoneNumberContainer\n                updateUser={updateUser} \n                users={users}\n                userIP={userIP}\n              />\n            </StaticElementContainer>\n          } \n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreatePasswordStaticElementContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\utils\\userIPModule.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\FrontPageStaticContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\SignInFrontPageContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\ConfirmYoureNotARobotContainer.js",["166"],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\StaticElementContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreateAccountContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\AddRecoveryEmailContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\ChooseYourGmailAddressContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\MockMailContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\AddPhoneNumberContainer.js",["167","168"],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreatePasswordContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\BirthdayAndGenderContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreateAccountComponent.js",["169","170"],[],"import React from 'react';\nimport errorImage from '../images/Daco_5575399.png';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport CustomNextButton from './CustomNextButton';\n\nexport const CreateAccountcomponent = ({ \n    firstName,\n    lastName,\n    handleNextClick,\n    isImagePreloaded,\n    onFirstNameInputChange,\n    onLastNameInputChange,\n    errorCondition,\n}) => {\n\n    return (\n        <form>\n\n            <h1 class=\"thin h1-space\">Create a Google Account</h1>\n            <h2 class='thin gap'>Enter your name</h2>\n\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1.25},\n                    width: 363,\n                    maxWidth: '100%',\n                }}\n            >\n                <TextField \n                    error={errorCondition}\n                    id=\"firstNameInput\" \n                    label=\"First Name\" \n                    variant=\"outlined\" \n                    fullWidth\n                    value={firstName}\n                    onChange={onFirstNameInputChange}\n                    InputLabelProps={\n                        errorCondition ? \n                        { \n                            sx: {\n                                color: firstName ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                '&.Mui-focused': {\n                                    color: '#d32f2f !important',\n                                },\n                            },\n                        } : {}\n                    }\n                    sx={\n                        errorCondition ? \n                        {} : \n                        {\n                            \"& .MuiOutlinedInput-root\": {\n                                \"&:hover:not(.Mui-focused) fieldset\": {\n                                    borderColor: \"#dadce0\"\n                                },\n                                \"& fieldset\": {\n                                    borderColor: \"#dadce0\"\n                                },\n                            }\n                        }\n                    }\n                />\n                <TextField \n                    label=\"Last Name (optional)\"\n                    className='last-name-margin-top' \n                    variant=\"outlined\" \n                    fullWidth\n                    value={lastName}\n                    onChange={onLastNameInputChange}\n                    sx={{\n                        \"& .MuiOutlinedInput-root\": {\n                            \"&:hover:not(.Mui-focused) fieldset\": {\n                              borderColor: \"#dadce0\"\n                            },\n                            \"& fieldset\": {\n                                borderColor: \"#dadce0\"\n                            },\n                        },\n                    }}\n                />       \n            </Box>\n\n            {errorCondition === \"firstNameEmpty\" && isImagePreloaded ? (\n                <div class='error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter first name</p>\n                </div>\n            ) : errorCondition === \"areYouSureCorrect\" && isImagePreloaded ? (\n                <div class='error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Are you sure you entered your name correctly?</p>\n                </div>\n            ) : (\n                <div className='hidden-error-message-container-create-account'></div>\n            )} \n\n            <div class={errorCondition === \"firstNameEmpty\" || errorCondition === \"areYouSureCorrect\" ? 'button-right-first-name-empty' : 'button-right'}>\n                <CustomNextButton \n                    variant=\"contained\" \n                    onClick={handleNextClick}\n                    sx={{\n                        '&& .MuiTouchRipple-rippleVisible': {\n                            animationDuration: '300ms',\n                        },\n                    }}\n                >\n                    Next\n                </CustomNextButton>\n            </div>\n\n        </form>\n    );\n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\SignInFrontPageComponent.js",["171","172"],[],"import React from \"react\";\nimport errorImage from '../images/Daco_5575399.png';\n\nexport const SignInFrontPageComponent = ({ \n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleSubmit,\n    handlePasswordClick, \n    handleEmailClick,\n    emailPlaceholder,\n    passwordPlaceholder,\n    handleEmailBlur,\n    handlePasswordBlur,\n    handleCreateAccountClick,\n    emailIsEmpty,\n    passwordIsEmpty,\n    isImagePreloaded\n}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h1 class=\"thin h1-space\">Sign In</h1>\n\n            <h2 class='thin gap'>to continue to Gmail</h2>\n\n            <label class=\"space line-height label-input-width input-label\">\n                <input \n                    class={`${emailIsEmpty ? 'error' : \"input\"}`}\n                    id='emailInput'\n                    type='text' \n                    value={email} \n                    placeholder={emailPlaceholder}\n                    onFocus={handleEmailClick}\n                    onBlur={handleEmailBlur}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </label>\n\n            {emailIsEmpty && isImagePreloaded && (\n                <div class='error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter first name</p>\n                </div>\n            )}\n     \n            <label class=\"space line-height label-input-width input-label\">\n                <input \n                    class={`disable-eye-icon ${passwordIsEmpty ? 'error' : \"input\"}`}\n                    id='passwordInput'\n                    type='password'\n                    value={password}\n                    placeholder={passwordPlaceholder}\n                    onFocus={handlePasswordClick}\n                    onBlur={handlePasswordBlur}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </label>\n\n            {passwordIsEmpty && isImagePreloaded && (\n                <div class='error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter first name</p>\n                </div>\n            )}\n            \n            <button class=\"log-in-space blue-button\">\n                Login   \n            </button>\n\n\n            <p class=\"links-font-size sign-in-space-1 hyper-link\">Forgot Email?</p>\n            <p class=\"links-font-size sign-in-space hyper-link\">Forgot Password?</p>\n            <button type='button' class=\"last grey-button\" onClick={handleCreateAccountClick}>Create account</button>\n        </form>\n  );\n}\n\n\n","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\StaticElementComponent.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreatePasswordStaticElementComponent.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\FrontPageStaticComponent.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\ConfirmYoureNotARobotComponent.js",["173","174","175","176"],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\MockMail.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\ChooseYourGmailAddressComponent.js",["177","178","179","180"],[],"import React from 'react';\nimport errorImage from '../images/Daco_5575399.png';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport CustomNextButton from './CustomNextButton';\n\nexport const ChooseYourGmailAddressComponent = ({ \n    email,\n    handleNextClick,\n    isImagePreloaded,\n    errorCondition,\n    handleSelectEmail\n}) => {\n\n    return (\n        <form>\n\n            <h1 class=\"thin h1-space\">How you'll sign in</h1>\n\n            <h2 class='thin gap center' id='h2'>Create a Gmail addres for signing in to your Google Account</h2>\n\n            <div class=\"space line-height label-input-width input-label\" id='username-input-width'>\n                <Box>\n                    <TextField\n                        fullWidth error={errorCondition}\n                        id='usernameInput'\n                        value={email}\n                        type='text'\n                        label=\"Username\"\n                        onChange={handleSelectEmail}\n                        InputLabelProps={\n                            errorCondition ? \n                            { \n                                sx: {\n                                    color: email ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                    '&.Mui-focused': {\n                                        color: '#d32f2f !important',\n                                    },\n                                },\n                            } : {}\n                        }\n                        sx={\n                            errorCondition ? \n                            {} : \n                            {\n                                \"& .MuiOutlinedInput-root\": {\n                                    \"&:hover:not(.Mui-focused) fieldset\": {\n                                        borderColor: \"#dadce0\"\n                                    },\n                                    \"& fieldset\": {\n                                        borderColor: \"#dadce0\"\n                                    },\n                                }\n                            }\n                        }\n                    />\n                    <span class='static-position'>\n                        @gmail.com\n                    </span>\n                </Box> \n            </div>\n\n            {errorCondition === \"isIncorrectLength\" && isImagePreloaded ? (\n                <div class='long-error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message-6-30\">Sorry, your username must be between 6 and 30 characters long.</p>\n                </div>\n            ) : errorCondition === \"usernameEmpty\" && isImagePreloaded ? (\n                <div class='error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter a Gmail address</p>\n                </div>\n            ) : errorCondition === \"usesUnallowedChars\" && isImagePreloaded ? (\n                <div class='long-error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Sorry, only letters (a-z), numbers (0-9) and periods (.) are allowed.</p>\n                </div>\n            ) : errorCondition === \"usernameIsAlreadyTaken\" && isImagePreloaded ? (\n                <div class='long-error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">That username is taken. Try another.</p>\n                </div>\n            ) : (\n                <div class='below-input-small-grey'>\n                    <p class='small-grey'>You can use letters, numbers & periods</p>\n                </div>\n            )}\n\n            <div id='button-right-choose-email'>\n                <CustomNextButton \n                    class=\"button-space blue-button\"\n                    variant=\"contained\" \n                    onClick={handleNextClick}\n                    sx={{\n                        '&& .MuiTouchRipple-rippleVisible': {\n                            animationDuration: '300ms',\n                        },\n                    }}\n                >\n                        Next\n                </CustomNextButton>\n            </div>\n\n        </form>\n    );\n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreatePasswordComponent.js",["181","182","183","184","185"],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\AddRecoveryEmailComponent.js",["186","187","188"],[],"import React from 'react';\nimport errorImage from '../images/Daco_5575399.png';\n\nexport const AddRecoveryEmailComponent = ({ \n    recoveryEmail,\n    setRecoveryEmail,\n    recoveryEmailPlaceholder,\n    handleRecoveryEmailClick,\n    handleRecoveryEmailBlur,\n    handleNextClick,\n    isImagePreloaded,\n    errorCondition,\n    handleSkip,\n    handleSubmit\n}) => {\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h1 class=\"thin h1-space\">Add recovery email</h1>\n            <div id='reduce-width-h2'>\n                <h2 class='thin gap center'>The address where Google can contact you if there’s unusual activity in your account or if you get locked out.</h2>\n            </div>\n\n            <label id='create-password-space'class=\" line-height label-input-width input-label\">\n                <input \n                    id='recoveryEmailInput'\n                    class={errorCondition === 'enterValidEmail' || errorCondition === 'passwordMismatch' || errorCondition === 'dontForgetAtSymbol' || errorCondition === 'enterADomainName' ? 'error' : 'input'}\n                    type='text'\n                    value={recoveryEmail} \n                    onChange={(e) => setRecoveryEmail(e.target.value)} \n                    placeholder={recoveryEmailPlaceholder}\n                    onFocus={handleRecoveryEmailClick}\n                    onBlur={handleRecoveryEmailBlur}\n                />\n            </label>\n     \n            {errorCondition === 'enterValidEmail' && isImagePreloaded && (\n                <div class='error-div-add-recovery-email'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter a valid email</p>\n                </div>\n            )}\n\n            {errorCondition === 'dontForgetAtSymbol' && isImagePreloaded && ( \n                <div class='error-div-add-recovery-email'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Don't forget to include the '@'.</p>\n                </div>\n            )} \n            \n            {errorCondition === 'enterADomainName' && isImagePreloaded && (\n                <div class='error-div-add-recovery-email'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter a domain name after the '@'.</p>\n                </div>\n            )}\n            \n            <div class='next-and-skip-button-duo'>\n                <button class=\"button-space-add-recovery-email white-button\" type=\"submit\" onClick={handleNextClick}>\n                        Next   \n                </button>\n                <button class=\"button-space-add-recovery-email white-button\" type=\"button\" onClick={handleSkip}>\n                        Skip   \n                </button>\n            </div>\n\n        </form>\n    );\n}\n","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\AddPhoneNumberComponent.js",["189","190","191","192"],[],"import React from 'react';\nimport Select from 'react-select';\nimport errorImage from '../images/Daco_5575399.png';\nimport GBSVG from '../images/flags/gb2.svg';\nimport dropDownImageSVG from '../images/drop-down-svg.svg';\n\nexport const AddPhoneNumberComponent = ({ \n    phoneNumber,\n    setPhoneNumber,\n    handlePhoneNumberClick,\n    handlePhoneNumberBlur,\n    phoneNumberPlaceholder,\n    handleNextClick,\n    handleSkip,\n    isPhoneNumberEmpty,\n    isImagePreloaded,\n    isIncorrectFormat,\n    isAlreadyRegistered,\n    usersCountryTopSeparateOptions,\n    usersCountryFlagSVG,\n    customStyles,\n    CustomDropdownIndicator,\n    setIsOpen,\n    isSelectionMade\n}) => {\n\n    return (\n\n        <form className='phone-number-form'>\n\n            <h1 class=\"thin h1-space-phone-number\">Add phone number</h1>\n\n            <div id='add-phone-number-dropdown-and-input'>\n                {usersCountryFlagSVG ? (\n                    <Select\n                        styles={customStyles}\n                        onMenuOpen={() => setIsOpen(true)}\n                        onMenuClose={() => setIsOpen(false)}\n                        class=\"flag-drop-down\"\n                        options={usersCountryTopSeparateOptions}\n                        components={{ DropdownIndicator: CustomDropdownIndicator}}\n                        placeholder={isSelectionMade ? '' : <img\n                                                                src={require(`../images/flags/${usersCountryFlagSVG}`)}\n                                                                alt=\"Flag\"\n                                                                width=\"24\"\n                                                                height=\"16\"\n                                                            />\n                        }\n                        menuIsOpen={true}\n                    />\n                ) : (\n                    <Select\n                        styles={customStyles}\n                        onMenuOpen={() => setIsOpen(true)}\n                        onMenuClose={() => setIsOpen(false)}\n                        class=\"flag-drop-down\"\n                        options={usersCountryTopSeparateOptions}\n                        components={{ DropdownIndicator: CustomDropdownIndicator}}\n                        placeholder={isSelectionMade ? '' : <img\n                                                                src={GBSVG}\n                                                                alt=\"Flag\"\n                                                                width=\"24\"\n                                                                height=\"16\"\n                                                            />\n                        }\n                    />\n                )}\n\n                <label class=\"space-phone-number-input line-height label-input-width input-label\" id='phoneNumber-input-width'>\n                    <div class='placeholder-satic-cohersion-phone-number'>\n                        <input \n                            id='phoneNumberInput'\n                            class={isPhoneNumberEmpty ? 'short-error' : 'short-input'}\n                            type='text' \n                            value={phoneNumber} \n                            onChange={(e) => setPhoneNumber(e.target.value)} \n                            placeholder={phoneNumberPlaceholder}\n                            onFocus={handlePhoneNumberClick}\n                            onBlur={handlePhoneNumberBlur}\n                        />\n                    </div>\n                </label>\n            </div>\n\n            {isPhoneNumberEmpty && isImagePreloaded ? (\n                <div class='long-error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Please enter a phone number</p>\n                </div>\n            ) : isIncorrectFormat && isImagePreloaded ? (\n                <div class='error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">This phone number format is not recognized. Please check the country and number.</p>\n                </div>\n            ) : isAlreadyRegistered && isImagePreloaded (\n                <div class='error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">This phone number has been used too many times</p>\n                </div>\n            )}\n\n            <div class='below-input-add-phone-number'>\n                <p class='small-grey'>Google will use this number only for account security. Your number won’t be visible to others. You can choose later whether to use it for other purposes.</p>\n            </div>\n\n            <div class='next-and-skip-button-duo'>\n                <button class=\"button-space-add-phone-number white-button\" type=\"submit\" onClick={handleNextClick}>\n                        Next   \n                </button>\n                <button class=\"button-space-add-phone-number white-button\" type=\"button\" onClick={handleSkip}>\n                        Skip   \n                </button>\n            </div>\n\n        </form>\n    );\n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\BirthdayAndGenderComponent.js",["193","194","195","196","197"],[],"import React from 'react';\nimport errorImage from '../images/Daco_5575399.png';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport googleWritingSvg from \"../images/google-writing-svg.svg\";\nimport CustomNextButton from './CustomNextButton';\n\nexport const BirthdayAndGenderComponent = ({\n    month, \n    handleSelectMonth,\n    day,\n    handleSelectDay,\n    year,\n    handleSelectYear,\n    gender,\n    handleSelectGender,\n    handleNextClick,\n    isImagePreloaded,\n    genderEmpty,\n    errorCondition,\n    isImageLoaded,\n    customGender,\n    handleSelectCustomGender,\n    customGenderEmpty,\n    pronounEmpty,\n    pronoun,\n    handleSelectPronoun,\n    isCustomChecked\n\n}) => {\n    \n    return (\n        <div id='google-container-BG'>\n            <div className={isImageLoaded ? 'empty-blue-snake-loader-placeholder' : \"empty-blue-snake-loader\"}>\n            <div className=\"blue-snake-loader\"></div>\n            </div>\n            <img src={googleWritingSvg} alt=\"Google Writing\" id=\"google-writing-BG\"/>\n\n        \n            <form>\n\n                <h1 class=\"thin h1-space\">Basic Information</h1>\n\n                <h2 class='thin gap'>Enter your birthday and gender</h2>\n\n                <div class='third-container-basic-information'>\n\n{/* Month */}\n\n                    <Box sx={{ width: 'calc(32.5% - 2px)' }}>\n                        <FormControl fullWidth error={errorCondition}>\n                            <InputLabel \n                                sx={errorCondition ? \n                                    {\n                                        color: month ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                        '&.Mui-focused': {\n                                            color: '#d32f2f !important',\n                                        },\n                                    } : {}\n                                } \n                            >\n                                Month\n                            </InputLabel>\n                            <Select\n                                value={month}\n                                label=\"Month\"\n                                onChange={(e) => handleSelectMonth(e, year, day)}\n                                native=\"true\"\n                                sx={{\n                                    \"&:hover:not(.Mui-focused)\": {\n                                        \"&& fieldset\": {\n                                            borderColor: errorCondition ? \"\" : \"#dadce0\",\n                                        },\n                                    },\n                                    \".MuiOutlinedInput-notchedOutline\": {\n                                        borderColor: '#dadce0',\n                                    },\n                                    '.MuiSvgIcon-root ': {\n                                        fill: \"#9e9e9e\",\n                                        fontSize: '1.8rem',\n                                    },\n                                }}\n                            >\n                                <option value=\"\" hidden></option>\n                                <option value=\"January\">January</option>\n                                <option value=\"February\">February</option>\n                                <option value=\"March\">March</option>\n                                <option value=\"April\">April</option>\n                                <option value=\"May\">May</option>\n                                <option value=\"June\">June</option>\n                                <option value=\"July\">July</option>\n                                <option value=\"August\">August</option>\n                                <option value=\"September\">September</option>\n                                <option value=\"October\">October</option>\n                                <option value=\"November\">November</option>\n                                <option value=\"December\">December</option>\n                            </Select>\n                        </FormControl>\n                    </Box>\n\n{/* Day */}\n\n                    <Box sx={{ width: 'calc(32.5% - 10px)' }}>\n                        <TextField\n                            fullWidth error={errorCondition}\n                            value={day}\n                            label=\"Day\"\n                            onChange={(e) => handleSelectDay(e, year, month)}\n                            maxLength=\"2\"\n                            InputLabelProps={\n                                errorCondition ? \n                                { \n                                    sx: {\n                                        color: day ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                        '&.Mui-focused': {\n                                            color: '#d32f2f !important',\n                                        },\n                                    },\n                                } : {}\n                            }\n                            sx={\n                                errorCondition ? \n                                {} : \n                                {\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"&:hover:not(.Mui-focused) fieldset\": {\n                                            borderColor: \"#dadce0\"\n                                        },\n                                        \"& fieldset\": {\n                                            borderColor: \"#dadce0\"\n                                        },\n                                    }\n                                }\n                            }\n                        />\n                    </Box>\n\n{/* Year */}\n\n                    <Box sx={{ width: 'calc(32.5% - 10px)' }}>\n                        <TextField\n                            fullWidth error={errorCondition}\n                            value={year}\n                            label=\"Year\"\n                            onChange={(e) => handleSelectYear(e, day, month)}\n                            maxLength=\"4\"\n                            InputLabelProps={\n                                errorCondition ? \n                                { \n                                    sx: {\n                                        color: year ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                        '&.Mui-focused': {\n                                            color: '#d32f2f !important',\n                                        },\n                                    },\n                                } : {}\n                            }\n                            sx={\n                                errorCondition ? \n                                {} : \n                                {\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"&:hover:not(.Mui-focused) fieldset\": {\n                                            borderColor: \"#dadce0\"\n                                        },\n                                        \"& fieldset\": {\n                                            borderColor: \"#dadce0\"\n                                        },\n                                    }\n                                }\n                            }\n                        />\n                    </Box>\n\n                </div>\n\n                {errorCondition === 'incompleteBirthday' && isImagePreloaded ? (\n                    <div class='error-div' id='error-div-space-basic-info'>\n                        <img className='error-image' src={errorImage} alt='Error Image' />\n                        <p class=\"input-error-message\">Please fill in a complete birthday</p>\n                    </div>\n                ) : errorCondition === 'isWrongFormat' && isImagePreloaded ? (\n                    <div class='error-div' id='error-div-space-basic-info'>\n                        <img className='error-image' src={errorImage} alt='Error Image' />\n                        <p class=\"input-error-message\">Please enter a valid date</p>\n                    </div>\n                ) : (\n                    <div className='hidden-error-message-container-create-account'></div>\n                )}\n\n{/* Gender */}\n\n                <div class='line-height gender-input-width' id='gender-space'>\n                    <Box>\n                        <FormControl fullWidth error={genderEmpty}>\n                            <InputLabel \n                            sx={genderEmpty ? \n                                {\n                                    color: gender ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                    '&.Mui-focused': {\n                                        color: '#d32f2f !important',\n                                    },\n                                } : {}\n                            } \n                            >  \n                                Gender\n                            </InputLabel>\n                            <Select\n                                value={gender}\n                                label=\"Gender\"\n                                onChange={handleSelectGender}\n                                native=\"true\"\n                                sx={{\n                                    \"&:hover:not(.Mui-focused)\": {\n                                        \"&& fieldset\": {\n                                            borderColor: genderEmpty ? \"\" : \"#dadce0\",\n                                        },\n                                    },\n                                    \".MuiOutlinedInput-notchedOutline\": {\n                                        borderColor: '#dadce0',\n                                    },\n                                    '.MuiSvgIcon-root ': {\n                                        fill: \"#9e9e9e\",\n                                        fontSize: '1.8rem',\n                                    },\n                                }}\n                            >\n                                <option value=\"\" hidden></option>\n                                <option value=\"Female\">Female</option>\n                                <option value=\"Male\">Male</option>\n                                <option value=\"Rather not say\">Rather not say</option>\n                                <option value=\"Custom\">Custom</option>\n                            </Select>\n                        </FormControl>\n                    </Box>\n                </div>  \n\n                {genderEmpty && isImagePreloaded ? (\n                    <div class='error-div' id='error-div-space-basic-info'>\n                        <img className='error-image' src={errorImage} alt='Error Image' />\n                        <p class=\"input-error-message\">Please select your gender</p>\n                    </div>\n                ) : (\n                    <div className='hidden-error-message-container-BI'></div>\n                )}\n\n{/* Hidden Gender Options */}\n\n{/* What's Your Gender? */}\n\n                {isCustomChecked && (\n                    <>\n                        <div class='line-height gender-input-width' id='gender-space'>\n                            <Box>\n                                    <TextField\n                                        fullWidth error={customGenderEmpty}\n                                        value={customGender}\n                                        label=\"What's your gender?\"\n                                        onChange={handleSelectCustomGender}\n                                        InputLabelProps={\n                                            customGenderEmpty ? \n                                            { \n                                                sx: {\n                                                    color: customGender ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                                    '&.Mui-focused': {\n                                                        color: '#d32f2f !important',\n                                                    },\n                                                },\n                                            } : {}\n                                        }\n                                        sx={\n                                            customGenderEmpty ? \n                                            {} : \n                                            {\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"&:hover:not(.Mui-focused) fieldset\": {\n                                                        borderColor: \"#dadce0\"\n                                                    },\n                                                    \"& fieldset\": {\n                                                        borderColor: \"#dadce0\"\n                                                    },\n                                                }\n                                            }\n                                        }\n                                    />\n                            </Box>  \n                        </div>\n\n                        {customGenderEmpty && isImagePreloaded ? (\n                            <div class='error-div' id='error-div-space-basic-info'>\n                                <img className='error-image' src={errorImage} alt='Error Image' />\n                                <p class=\"input-error-message\">Please indicate the gender you most identify with</p>\n                            </div>\n                        ) : (\n                            <div className='hidden-error-message-container-BI'></div>\n                        )}\n\n                        <div class='line-height gender-input-width' id='gender-space'>\n                            <Box>\n                                <FormControl fullWidth error={pronounEmpty}>\n                                    <InputLabel \n                                    sx={pronounEmpty ? \n                                        {\n                                            color: pronoun ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                            '&.Mui-focused': {\n                                                color: '#d32f2f !important',\n                                            },\n                                        } : {}\n                                    } \n                                    >  \n                                        Please refer to me as\n                                    </InputLabel>\n                                    <Select\n                                        value={pronoun}\n                                        label=\"Please refer to me as\"\n                                        onChange={handleSelectPronoun}\n                                        native=\"true\"\n                                        sx={{\n                                            \"&:hover:not(.Mui-focused)\": {\n                                                \"&& fieldset\": {\n                                                    borderColor: pronounEmpty ? \"\" : \"#dadce0\",\n                                                },\n                                            },\n                                            \".MuiOutlinedInput-notchedOutline\": {\n                                                borderColor: '#dadce0',\n                                            },\n                                            '.MuiSvgIcon-root ': {\n                                                fill: \"#9e9e9e\",\n                                            },\n                                        }}\n                                    >\n                                        <option value=\"\" hidden></option>\n                                        <option value=\"Female\">Female</option>\n                                        <option value=\"Male\">Male</option>\n                                        <option value=\"Other\">Other</option>\n                                    </Select>\n                                </FormControl>\n                            </Box>\n                        </div>\n\n                        {pronounEmpty && isImagePreloaded ? (\n                            <div class='error-div' id='error-div-space-basic-info'>\n                                <img className='error-image' src={errorImage} alt='Error Image' />\n                                <p class=\"input-error-message\">Please select a pronoun</p>\n                            </div>\n                        ) : (\n                            <div className='hidden-error-message-container-BI'></div>\n                        )} \n                    </>\n                )}\n    \n\n                <section class={errorCondition || genderEmpty ? 'button-right-error-BI' : 'button-right-BI'}>\n                    <CustomNextButton \n                        variant=\"contained\" \n                        onClick={handleNextClick}\n                        sx={{\n                            '&& .MuiTouchRipple-rippleVisible': {\n                                animationDuration: '300ms',\n                            },\n                        }}\n                    >\n                            Next\n                    </CustomNextButton>\n                </section>\n\n            </form>\n        </div>\n    )\n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\hooks\\useImagePreload.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\images\\flags\\importSVGs.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CustomNextButton.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\utils\\countryDropDownOptions.js",[],[],{"ruleId":"198","severity":1,"message":"199","line":55,"column":9,"nodeType":"200","messageId":"201","endLine":55,"endColumn":16},{"ruleId":"198","severity":1,"message":"202","line":22,"column":12,"nodeType":"200","messageId":"201","endLine":22,"endColumn":24},{"ruleId":"198","severity":1,"message":"203","line":18,"column":12,"nodeType":"200","messageId":"201","endLine":18,"endColumn":26},{"ruleId":"198","severity":1,"message":"204","line":20,"column":12,"nodeType":"200","messageId":"201","endLine":20,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":87,"column":21,"nodeType":"207","endLine":87,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":92,"column":21,"nodeType":"207","endLine":92,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":43,"column":21,"nodeType":"207","endLine":43,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":63,"column":21,"nodeType":"207","endLine":63,"endColumn":87},{"ruleId":"198","severity":1,"message":"208","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":63,"column":21,"nodeType":"207","endLine":63,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":68,"column":21,"nodeType":"207","endLine":68,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":73,"column":21,"nodeType":"207","endLine":73,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":65,"column":21,"nodeType":"207","endLine":65,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":70,"column":21,"nodeType":"207","endLine":70,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":75,"column":21,"nodeType":"207","endLine":75,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":80,"column":21,"nodeType":"207","endLine":80,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":107,"column":21,"nodeType":"207","endLine":107,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":114,"column":21,"nodeType":"207","endLine":114,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":121,"column":21,"nodeType":"207","endLine":121,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":128,"column":21,"nodeType":"207","endLine":128,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":135,"column":21,"nodeType":"207","endLine":135,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":41,"column":21,"nodeType":"207","endLine":41,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":48,"column":21,"nodeType":"207","endLine":48,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":55,"column":21,"nodeType":"207","endLine":55,"endColumn":87},{"ruleId":"198","severity":1,"message":"209","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":87,"column":21,"nodeType":"207","endLine":87,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":92,"column":21,"nodeType":"207","endLine":92,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":97,"column":21,"nodeType":"207","endLine":97,"endColumn":87},{"ruleId":"205","severity":1,"message":"206","line":182,"column":25,"nodeType":"207","endLine":182,"endColumn":91},{"ruleId":"205","severity":1,"message":"206","line":187,"column":25,"nodeType":"207","endLine":187,"endColumn":91},{"ruleId":"205","severity":1,"message":"206","line":243,"column":25,"nodeType":"207","endLine":243,"endColumn":91},{"ruleId":"205","severity":1,"message":"206","line":294,"column":33,"nodeType":"207","endLine":294,"endColumn":99},{"ruleId":"205","severity":1,"message":"206","line":346,"column":33,"nodeType":"207","endLine":346,"endColumn":99},"no-unused-vars","'addUser' is assigned a value but never used.","Identifier","unusedVar","'usersCountry' is assigned a value but never used.","'errorCondition' is assigned a value but never used.","'isOpen' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'GBSVG' is defined but never used.","'dropDownImageSVG' is defined but never used."]