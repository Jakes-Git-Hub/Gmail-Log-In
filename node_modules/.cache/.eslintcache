[{"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\index.js":"1","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\App.js":"2","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreatePasswordStaticElementContainer.js":"3","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\utils\\userIPModule.js":"4","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\FrontPageStaticContainer.js":"5","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\SignInFrontPageContainer.js":"6","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\ConfirmYoureNotARobotContainer.js":"7","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\StaticElementContainer.js":"8","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreateAccountContainer.js":"9","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\AddRecoveryEmailContainer.js":"10","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\ChooseYourGmailAddressContainer.js":"11","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\MockMailContainer.js":"12","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\AddPhoneNumberContainer.js":"13","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreatePasswordContainer.js":"14","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\BirthdayAndGenderContainer.js":"15","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\utils\\addPhoneNumberDropDownOptionsObject.js":"16","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreateAccountComponent.js":"17","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\SignInFrontPageComponent.js":"18","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\StaticElementComponent.js":"19","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreatePasswordStaticElementComponent.js":"20","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\FrontPageStaticComponent.js":"21","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\ConfirmYoureNotARobotComponent.js":"22","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\MockMail.js":"23","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\ChooseYourGmailAddressComponent.js":"24","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreatePasswordComponent.js":"25","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\AddRecoveryEmailComponent.js":"26","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\AddPhoneNumberComponent.js":"27","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\BirthdayAndGenderComponent.js":"28","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\hooks\\useImagePreload.js":"29","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\images\\flags\\importSVGs.js":"30","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CustomNextButton.js":"31"},{"size":207,"mtime":1700653265227,"results":"32","hashOfConfig":"33"},{"size":4832,"mtime":1702805907599,"results":"34","hashOfConfig":"33"},{"size":764,"mtime":1700653265603,"results":"35","hashOfConfig":"33"},{"size":518,"mtime":1700653270442,"results":"36","hashOfConfig":"33"},{"size":625,"mtime":1700653265634,"results":"37","hashOfConfig":"33"},{"size":3169,"mtime":1700653265666,"results":"38","hashOfConfig":"33"},{"size":7947,"mtime":1700653265572,"results":"39","hashOfConfig":"33"},{"size":694,"mtime":1700653265681,"results":"40","hashOfConfig":"33"},{"size":2814,"mtime":1702462389362,"results":"41","hashOfConfig":"33"},{"size":3674,"mtime":1700653265509,"results":"42","hashOfConfig":"33"},{"size":2465,"mtime":1700653265559,"results":"43","hashOfConfig":"33"},{"size":363,"mtime":1700653265650,"results":"44","hashOfConfig":"33"},{"size":9997,"mtime":1700653265493,"results":"45","hashOfConfig":"33"},{"size":4047,"mtime":1700653265587,"results":"46","hashOfConfig":"33"},{"size":5130,"mtime":1702899342797,"results":"47","hashOfConfig":"33"},{"size":29540,"mtime":1700653270426,"results":"48","hashOfConfig":"33"},{"size":4254,"mtime":1702808633684,"results":"49","hashOfConfig":"33"},{"size":2689,"mtime":1700653265431,"results":"50","hashOfConfig":"33"},{"size":524,"mtime":1700653265446,"results":"51","hashOfConfig":"33"},{"size":572,"mtime":1700653265368,"results":"52","hashOfConfig":"33"},{"size":869,"mtime":1700653265399,"results":"53","hashOfConfig":"33"},{"size":4422,"mtime":1700653265337,"results":"54","hashOfConfig":"33"},{"size":286,"mtime":1700653265415,"results":"55","hashOfConfig":"33"},{"size":2780,"mtime":1700653265326,"results":"56","hashOfConfig":"33"},{"size":4144,"mtime":1700653265353,"results":"57","hashOfConfig":"33"},{"size":2939,"mtime":1700653265290,"results":"58","hashOfConfig":"33"},{"size":5327,"mtime":1700653265258,"results":"59","hashOfConfig":"33"},{"size":17611,"mtime":1703064616962,"results":"60","hashOfConfig":"33"},{"size":350,"mtime":1700653265713,"results":"61","hashOfConfig":"33"},{"size":296,"mtime":1700653267850,"results":"62","hashOfConfig":"33"},{"size":724,"mtime":1702899253338,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1t6ddkw",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"67"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"67"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"67"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"67"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\index.js",[],[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\App.js",["169","170"],[],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useUserIP } from './utils/userIPModule';\nimport { FrontPageStaticContainer } from './containers/FrontPageStaticContainer'\nimport { StaticElementContainer } from \"./containers/StaticElementContainer\";\nimport { CreatePasswordStaticElementContainer } from \"./containers/CreatePasswordStaticElementContainer\";\nimport { SignInFrontPageContainer } from \"./containers/SignInFrontPageContainer\";\nimport { MockMailContainer } from \"./containers/MockMailContainer\";\nimport { CreateAccountContainer } from \"./containers/CreateAccountContainer\";\nimport { BirthdayAndGenderContainer } from \"./containers/BirthdayAndGenderContainer\";\nimport { ChooseYourGmailAddressContainer } from \"./containers/ChooseYourGmailAddressContainer\";\nimport { CreatePasswordContainer } from \"./containers/CreatePasswordContainer\";\nimport { ConfirmYoureNotARobotContainer } from \"./containers/ConfirmYoureNotARobotContainer\"\nimport { AddPhoneNumberContainer } from \"./containers/AddPhoneNumberContainer\"\nimport { AddRecoveryEmailContainer } from \"./containers/AddRecoveryEmailContainer\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentLoggedInUser, setCurrentLoggedInUser] = useState(null);\n  const [nextUserId, setNextUserId] = useState(1);\n  const [userData, setUserData] = useState({});\n\n// Grab User's IP\n\nconst { userIP } = useUserIP()\n\n// Handle Log In\n\n  const handleLogin = (email, password) => {\n    console.log(\"Attempting login with:\", email, password);\n    const correctLoginCredentials = users.find(\n      (user) => user.email === email && user.password === password\n    );\n\n    if (correctLoginCredentials) {\n      setLoggedIn(true);\n      setCurrentLoggedInUser(correctLoginCredentials.email);\n      console.log(\"Logged in as:\", correctLoginCredentials.email);\n    } else {\n      console.log(\"Invalid credentials\");\n    }\n  };\n\n  const updateUser = (data) => {\n    setUserData(prevData => ({ ...prevData, ...data }));\n  };\n\n  const addUser = () => {\n    const newUser = {\n      id: nextUserId,\n      ...userData\n    };\n    setUsers(prevUsers => [...prevUsers, newUser]);\n    setUserData({}); // Clear temporary user data\n    setNextUserId(prevId => prevId + 1); // Increment nextUserId\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n            <FrontPageStaticContainer>\n              <SignInFrontPageContainer \n                users={users}\n                handleLogin={handleLogin}\n                userIP={userIP}\n              />\n            </FrontPageStaticContainer>\n          } />\n        <Route \n          path=\"/mockmail\" \n          element={<MockMailContainer   \n                    loggedIn={loggedIn}\n                    currentLoggedInUser={currentLoggedInUser}\n                   />} \n        />\n        <Route path=\"/create-account\" element={\n            <StaticElementContainer>\n              <CreateAccountContainer \n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/basic-information\" element={\n              <BirthdayAndGenderContainer\n                updateUser={updateUser} \n              />\n          } \n        />\n        <Route path=\"/choose-your-gmail-address\" element={\n            <StaticElementContainer>\n              <ChooseYourGmailAddressContainer\n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/create-password\" element={\n            <CreatePasswordStaticElementContainer>\n              <CreatePasswordContainer\n                updateUser={updateUser} \n                users={users}\n              />\n            </CreatePasswordStaticElementContainer>\n          } \n        />\n        <Route path=\"/confirm-youre-not-a-robot\" element={\n            <StaticElementContainer>\n              <ConfirmYoureNotARobotContainer\n                updateUser={updateUser}\n                userIP={userIP}\n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/add-recovery-email\" element={\n            <StaticElementContainer>\n              <AddRecoveryEmailContainer\n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/add-phone-number\" element={\n            <StaticElementContainer>\n              <AddPhoneNumberContainer\n                updateUser={updateUser} \n                users={users}\n                userIP={userIP}\n              />\n            </StaticElementContainer>\n          } \n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreatePasswordStaticElementContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\utils\\userIPModule.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\FrontPageStaticContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\SignInFrontPageContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\ConfirmYoureNotARobotContainer.js",["171"],[],"import React, { useState, useEffect } from 'react';\nimport { components } from 'react-select';\nimport { useNavigate } from 'react-router-dom';\nimport { ConfirmYoureNotARobotComponent } from '../components/ConfirmYoureNotARobotComponent';\nimport useImagePreload from \"../hooks/useImagePreload\";\nimport errorImage from '../images/Daco_5575399.png';\nimport { countries } from '../utils/addPhoneNumberDropDownOptionsObject';\nimport axios from 'axios';\nimport dropDownImageSVG from '../images/drop-down-svg.svg';\nimport { customOptions } from '../utils/addPhoneNumberDropDownOptionsObject';\n\nexport const ConfirmYoureNotARobotContainer = ({ updateUser, users, userIP }) => {\n\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [phoneNumberPlaceholder, setPhoneNumberPlaceholder] = useState(\"Phone Number\");\n    const [isPhoneNumberEmpty, setIsPhoneNumberEmpty] = useState(false);\n    const [isIncorrectFormat, setIsIncorrectFormat] = useState(false);\n    const [isAlreadyRegistered, setIsAlreadyRegistered] = useState(false);\n    const [usersCountryFlagSVG, setUsersCountryFlagSVG] = useState('');\n    const [usersCountry, setUsersCountry] = useState('');\n    // const [customOptions, setCustomOptions] = useState([]);\n\n    const navigate = useNavigate();\n\n// Loads Error Image\n\n    const isImagePreloaded = useImagePreload(errorImage);\n\n// Get User's Country from IP and Set Placeholder SVG Based on it\n\n    useEffect(() => { \n        if (userIP) {\n            const apiKey = 'b2ef0251b1264f88ae869467dfe144d8';\n\n            axios.get(`https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}&ip=200.7.98.19`)\n            .then((response) => {\n                const countryFromIP = response.data.country_name;\n                const matchingCountry = countries.find(country => country.name === countryFromIP);\n                if (matchingCountry) {\n                    setUsersCountryFlagSVG(matchingCountry.svg);\n                    setUsersCountry(matchingCountry);\n                }\n                console.log(`User's country: ${countryFromIP}`);\n            })\n            .catch((error) => {\n                console.error('Error fetching geolocation data:', error);\n            });\n        } else {\n            console.log(\"didn't work, or still waiting for IP API request\");\n        }\n    }, [userIP]);\n\n// phoneNumber\n\n    const handlePhoneNumberClick = () => {\n        setPhoneNumberPlaceholder(\"\");\n    };\n\n    const handlePhoneNumberBlur = () => {\n        if (phoneNumber === \"\") {\n            setPhoneNumberPlaceholder(\"Phone Number\");\n        }\n    };\n\n// Error Messages\n\n    const phoneNumberEmpty = () => setIsPhoneNumberEmpty(true);\n\n    const incorrectFormat = () => setIsIncorrectFormat(true);\n\n    const alreadyRegistered = () => setIsAlreadyRegistered(true);\n\n// Handle Next Click\n\n    const handleNextClick = () => {\n        setIsPhoneNumberEmpty(false);\n        setIsIncorrectFormat(false);\n        setIsAlreadyRegistered(false);\n        if (phoneNumber === '') {\n        const phoneNumberInput = document.getElementById('phoneNumberInput');\n        phoneNumberEmpty();\n        phoneNumberInput.focus();\n        } else if (!/^[a-zA-Z0-9.]+$/.test(phoneNumber)) {\n        // Check if the phoneNumber contains unallowed characters\n        incorrectFormat();\n        console.log('correct regex')\n        } else {\n                const isPhoneNumberAlreadyRegistered = users.some(user => user.phoneNumber === phoneNumber);\n                if(isPhoneNumberAlreadyRegistered) {\n                    alreadyRegistered();    \n                } else {\n            updateUser({ phoneNumber: phoneNumber })\n            setPhoneNumber('');\n            navigate('/add-recovery-email')\n            }\n        }\n    };\n\n// Custom Components\n\nconst CustomDropdownIndicator = ({ menuIsOpen, innerProps, ...rest }) => {\n    const defaultColor = '#000';\n  \n    return (\n      <components.DropdownIndicator {...innerProps} { ...rest }>\n        <img\n          src={dropDownImageSVG}\n          alt=\"Dropdown Indicator\"\n          className={`svg dropdown-indicator ${menuIsOpen ? 'open' : ''}`}\n          style={{ fill: defaultColor }}\n        />\n      </components.DropdownIndicator>\n    );\n  };\n\n// Custom React Select Styles\n\n    const customStyles = {\n        menu: styles => ({\n            ...styles,\n            width: '360px',\n        }),\n        container: provided => ({\n            ...provided,\n            width: '103px',\n            marginLeft: '3px',\n        }),\n        control: (provided, state) => ({\n            ...provided,\n            height: '56.6px',\n            minHeight: '0px',\n            maxWidth: '83px',\n            border: state.selectProps.menuIsOpen ? '1px solid transparent' : 'transparent',\n            borderImage: state.selectProps.menuIsOpen ? 'linear-gradient(145deg, rgba(54,122,225,1) 48%, rgba(113,168,252,1) 100%)' : 'transparent',\n            borderImageSlice: state.selectProps.menuIsOpen ? '1' : 'transparent',\n            ':hover': {\n                cursor: 'pointer'\n            },\n            boxShadow: state.selectProps.menuIsOpen ? '0 0 0 1.5px #2684FF' : 'transparent',\n        }),\n        dropdownIndicator: (provided, state)=> ({\n            ...provided,\n            width: '32.5px', // Adjust the width to fit your image\n            height: '20px', // Adjust the height to fit your image\n            transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : null,\n            padding: '0px',\n            justifyContent: 'center',\n            ':hover': {\n                // Add styles for hover here\n                // For example, you can change the color on hover:\n                fill: '#ff0000', // Change this to your desired color\n              },\n              '&.menu-is-open': {\n                // Add styles for when the menu is open here\n                // For example, you can change the color when the menu is open:\n                fill: '#00ff00', // Change this to your desired color\n              },\n        }),\n        indicatorSeparator: provided => ({\n            ...provided,\n            display: 'none',\n        }),\n        indicatorContainer: provided => ({\n            ...provided,\n            display: 'flex',\n            justifyContent: 'center',\n            backGroundColor: 'red'\n        }),\n        // more styles\n        input: (provided) => ({\n            ...provided,\n            caretColor: 'transparent', // Hide the blinking cursor\n        }),\n        valueContainer: provided => ({\n            ...provided,\n            display: 'flex',\n            flexWrap: 'nowrap',\n            alignContent: 'center',\n            justifyContent: 'center',\n            flexDirection: 'row-reverse',\n        }),\n        placeholder: provided => ({\n            ...provided,\n            marginTop: '2px',\n        })\n    }\n  \n// Handle Skip\n\n    const handleSkip = () => {\n        setPhoneNumber('');\n        navigate('/review-your-account-info');\n    };\n\n    return (\n        <>\n            <ConfirmYoureNotARobotComponent\n                value={phoneNumber}\n                setValue={setPhoneNumber}\n                handlePhoneNumberClick={handlePhoneNumberClick}\n                handlePhoneNumberBlur={handlePhoneNumberBlur}\n                phoneNumberPlaceholder={phoneNumberPlaceholder}\n                handleNextClick={handleNextClick}\n                handleSkip={handleSkip}\n                isPhoneNumberEmpty={isPhoneNumberEmpty}\n                isImagePreloaded={isImagePreloaded}\n                isIncorrectFormat={isIncorrectFormat}\n                isAlreadyRegistered={isAlreadyRegistered}\n                customOptions={customOptions}\n                countries={countries}\n                customStyles={customStyles}\n                userIP={userIP}\n                usersCountryFlagSVG={usersCountryFlagSVG}\n                CustomDropdownIndicator={CustomDropdownIndicator}\n                setPhoneNumber={setPhoneNumber}\n            />\n        </>\n    )\n    \n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\StaticElementContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreateAccountContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\AddRecoveryEmailContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\ChooseYourGmailAddressContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\MockMailContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\AddPhoneNumberContainer.js",["172","173"],[],"import React, { useState, useEffect } from 'react';\nimport { components } from 'react-select';\nimport { useNavigate } from 'react-router-dom';\nimport { AddPhoneNumberComponent } from '../components/AddPhoneNumberComponent';\nimport useImagePreload from \"../hooks/useImagePreload\";\nimport errorImage from '../images/Daco_5575399.png';\nimport { countries, customOptions } from '../utils/addPhoneNumberDropDownOptionsObject';\nimport axios from 'axios';\nimport dropDownImageSVG from '../images/drop-down-svg.svg';\n\nexport const AddPhoneNumberContainer = ({ updateUser, users, userIP }) => {\n\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [phoneNumberPlaceholder, setPhoneNumberPlaceholder] = useState(\"Phone Number\");\n    const [isPhoneNumberEmpty, setIsPhoneNumberEmpty] = useState(false);\n    const [isIncorrectFormat, setIsIncorrectFormat] = useState(false);\n    const [isAlreadyRegistered, setIsAlreadyRegistered] = useState(false);\n    const [errorCondition, setErrorCondition] = useState(null);\n    const [usersCountryFlagSVG, setUsersCountryFlagSVG] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n    const [isSelectionMade, setIsSelectionMade] = useState(false);\n    const [usersCountryObject, setUsersCountryObject] = useState({});\n    const [loadingOptions, setLoadingOptions] = useState(true);\n\n    const navigate = useNavigate();\n\n// Loads Error Image\n\n    const isImagePreloaded = useImagePreload(errorImage);\n\n// Get User's Country from IP and Set Placeholder SVG Based on it\n\nuseEffect(() => { \n    if (userIP) {\n        const apiKey = 'b2ef0251b1264f88ae869467dfe144d8';\n\n        axios.get(`https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}&ip=200.7.98.19`)\n        .then((response) => {\n            const countryFromIP = response.data.country_name;\n            const matchingCountry = countries.find(country => country.name === countryFromIP);\n            if (matchingCountry) {\n                setUsersCountryFlagSVG(matchingCountry.svg);\n                setUsersCountryObject(matchingCountry);\n                setLoadingOptions(false);\n                console.log(matchingCountry);\n            }\n            console.log(`User's country: ${countryFromIP}`);\n        })\n        .catch((error) => {\n            console.error('Error fetching geolocation data:', error);\n            setLoadingOptions(false);\n        });\n    } else {\n        console.log(\"Still waiting for IP API request or, didn't work\");\n    }\n}, [userIP]);\n\nuseEffect(() => {\n    console.log(usersCountryObject);\n}, [usersCountryObject]);\n\n// Add in Users Country as Top Separate Option\n\nconst usersCountryTopSeparateOptions = loadingOptions\n    ? {\n        value: 'loading',\n        label: (\n            <div>\n                <img\n                    src={require('../images/flags/gb.svg')}\n                    className=\"flag-image\"\n                    alt={'GB flag'}\n                />\n                <span>\n                    {usersCountryObject.name} ({usersCountryObject.dialingCode})\n                </span>\n            </div>\n        ),\n    } // Options are still loading, return an empty array or a loading indicator\n    : [\n            {\n                value: usersCountryObject.dialingCode,\n                label: (\n                    <div className='users-country-top-option'>\n                        <img\n                            src={require(`../images/flags/${usersCountryObject.svg}`)}\n                            className=\"flag-image\"\n                            alt={`${usersCountryObject.name} flag`}\n                        />\n                        <span className='country-option'>\n                            {usersCountryObject.name} ({usersCountryObject.dialingCode})\n                        </span>\n                    </div>\n                ),\n            },\n            {\n                value: 'separator',\n                label: (\n                    <div className=\"separator\">\n                        {/* Your separator styling goes here */}\n                    </div>\n                ),\n                isSeparator: true,\n            },\n            ...customOptions,\n    ];\n\n// phoneNumber\n\n    const handlePhoneNumberClick = () => {\n        setPhoneNumberPlaceholder(\"\");\n    };\n\n    const handlePhoneNumberBlur = () => {\n        if (phoneNumber === \"\") {\n            setPhoneNumberPlaceholder(\"Phone Number\");\n        }\n    };\n\n// Error Messages\n\n    const phoneNumberEmpty = () => setIsPhoneNumberEmpty(true);\n\n    const incorrectFormat = () => setIsIncorrectFormat(true);\n\n    const alreadyRegistered = () => setIsAlreadyRegistered(true);\n\n// Handle Next Click\n\n    const handleNextClick = () => {\n        setIsPhoneNumberEmpty(false);\n        setIsIncorrectFormat(false);\n        setIsAlreadyRegistered(false);\n        if (phoneNumber === '') {\n        const phoneNumberInput = document.getElementById('phoneNumberInput');\n        phoneNumberEmpty();\n        phoneNumberInput.focus();\n        } else if (!/^[a-zA-Z0-9.]+$/.test(phoneNumber)) {\n        // Check if the phoneNumber contains unallowed characters\n        incorrectFormat();\n        console.log('correct regex')\n        } else {\n                const isPhoneNumberAlreadyRegistered = users.some(user => user.phoneNumber === phoneNumber);\n                if(isPhoneNumberAlreadyRegistered) {\n                    alreadyRegistered();    \n                } else {\n            updateUser({ phoneNumber: phoneNumber })\n            setPhoneNumber('');\n            setIsSelectionMade(true); \n            navigate('/add-recovery-email')\n            }\n        }\n    };\n\n// Custom Components\n\n    const CustomDropdownIndicator = (props) => {\n        return (\n            <components.DropdownIndicator {...props}>\n                    <img src={dropDownImageSVG} alt=\"Dropdown Indicator\" className='svg dropdown-indicator' />\n            </components.DropdownIndicator>\n        );\n    };\n\n// Custom React Select Styles\n\n    const customStyles = {\n        menu: styles => ({\n            ...styles,\n            width: '360px',\n            height: '365px',\n            boxShadow: '0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);',\n        }),\n        menuList: styles => ({\n            ...styles,\n            height: '365px',\n            maxHeight: '800px',\n        }),\n        container: provided => ({\n            ...provided,\n            width: '103px',\n            marginLeft: '3px',\n        }),\n        control: (provided, state) => ({\n            ...provided,\n            height: '33px',\n            minHeight: '0px',\n            maxWidth: '83px',\n            border: state.selectProps.menuIsOpen ? '1px solid transparent' : 'transparent',\n            borderImage: state.selectProps.menuIsOpen ? 'linear-gradient(145deg, rgba(54,122,225,1) 48%, rgba(113,168,252,1) 100%)' : 'transparent',\n            borderImageSlice: state.selectProps.menuIsOpen ? '1' : 'transparent',\n            ':hover': {\n                cursor: 'pointer'\n            },\n            boxShadow: state.selectProps.menuIsOpen ? '0 0 0 1.5px #2684FF' : 'transparent',\n        }),\n        indicatorSeparator: provided => ({\n            ...provided,\n            display: 'none',\n        }),\n        indicatorContainer: provided => ({\n            ...provided,\n            display: 'flex',\n            justifyContent: 'center',\n        }),\n        // more styles\n        input: (provided) => ({\n            ...provided,\n            caretColor: 'transparent', // Hide the blinking cursor\n        }),\n        valueContainer: provided => ({\n            ...provided,\n            display: 'flex',\n            flexWrap: 'nowrap',\n            alignContent: 'center',\n            justifyContent: 'center',\n            flexDirection: 'row-reverse',\n        }),\n        dropdownIndicator: (provided, state)=> ({\n            ...provided,\n            width: '32.5px', // Adjust the width to fit your image\n            height: '20px', // Adjust the height to fit your image\n            transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : null,\n            padding: '0px',\n            justifyContent: 'center',\n            // backgroundColor: state.selectProps.menuIsOpen ? 'red' : 'none', *this works*\n        }),\n        placeholder: provided => ({\n            ...provided,\n            marginTop: '2px',\n        }),\n        option: (provided, state) => ({\n            ...provided,\n            height: state.data.isSeparator ? '2px' : '48px',\n            display: 'flex',\n            alignItems: 'center',\n            ':hover': {\n                cursor: state.data.isSeparator ? 'default' : 'pointer',\n                backgroundColor: state.data.isSeparator ? 'white' : 'rgb(245 245 245)',\n            },\n        }),\n    }\n  \n// Handle Skip\n\n    const handleSkip = () => {\n        setPhoneNumber('');\n        setErrorCondition(null);\n        navigate('/review-your-account-info');\n    };\n\n    return (\n        <>\n            <AddPhoneNumberComponent\n                value={phoneNumber}\n                setValue={setPhoneNumber}\n                handlePhoneNumberClick={handlePhoneNumberClick}\n                handlePhoneNumberBlur={handlePhoneNumberBlur}\n                phoneNumberPlaceholder={phoneNumberPlaceholder}\n                handleNextClick={handleNextClick}\n                handleSkip={handleSkip}\n                isPhoneNumberEmpty={isPhoneNumberEmpty}\n                isImagePreloaded={isImagePreloaded}\n                isIncorrectFormat={isIncorrectFormat}\n                isAlreadyRegistered={isAlreadyRegistered}\n                usersCountryTopSeparateOptions={usersCountryTopSeparateOptions}\n                countries={countries}\n                customStyles={customStyles}\n                userIP={userIP}\n                usersCountryFlagSVG={usersCountryFlagSVG}\n                CustomDropdownIndicator={CustomDropdownIndicator}\n                setIsOpen={setIsOpen}\n                isSelectionMade={isSelectionMade}\n            />\n        </>\n    )\n    \n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\CreatePasswordContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\containers\\BirthdayAndGenderContainer.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\utils\\addPhoneNumberDropDownOptionsObject.js",["174"],[],"import axios from 'axios';\n\nexport const countries = [\n    {\n        name: 'Andorra',\n        abbreviation: 'ad',\n        dialingCode: '+376',\n        svg:'',\n    },\n    {\n        name: 'United Arab Emirates',\n        abbreviation: 'ae',\n        dialingCode: '+971',\n        svg:'',\n    },\n    {\n        name: 'Afghanistan',\n        abbreviation: 'af',\n        dialingCode: '+93',\n        svg:'',\n    },\n    {\n        name: 'Antigua and Barbuda',\n        abbreviation: 'ag',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Anguilla',\n        abbreviation: 'ai',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Albania',\n        abbreviation: 'al',\n        dialingCode: '+355',\n        svg:'',\n    },\n    {\n        name: 'Armenia',\n        abbreviation: 'am',\n        dialingCode: '+374',\n        svg:'',\n    },\n    {\n        name: 'Angola',\n        abbreviation: 'ao',\n        dialingCode: '+244',\n        svg:'',\n    },\n    {\n        name: 'Antarctica',\n        abbreviation: 'aq',\n        dialingCode: '', // No dialing code\n        svg:'',\n    },\n    {\n        name: 'Argentina',\n        abbreviation: 'ar',\n        dialingCode: '+54',\n        svg:'',\n    },\n    {\n        name: 'American Samoa',\n        abbreviation: 'as',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Austria',\n        abbreviation: 'at',\n        dialingCode: '+43',\n        svg:'',\n    },\n    {\n        name: 'Australia',\n        abbreviation: 'au',\n        dialingCode: '+61',\n        svg:'',\n    },\n    {\n        name: 'Aruba',\n        abbreviation: 'aw',\n        dialingCode: '+297',\n        svg:'',\n    },\n    {\n        name: 'Åland Islands',\n        abbreviation: 'ax',\n        dialingCode: '+358',\n        svg:'',\n    },\n    {\n        name: 'Azerbaijan',\n        abbreviation: 'az',\n        dialingCode: '+994',\n        svg:'',\n    },\n    {\n        name: 'Bosnia and Herzegovina',\n        abbreviation: 'ba',\n        dialingCode: '+387',\n        svg:'',\n    },\n    {\n        name: 'Barbados',\n        abbreviation: 'bb',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Bangladesh',\n        abbreviation: 'bd',\n        dialingCode: '+880',\n        svg:'',\n    },\n    {\n        name: 'Belgium',\n        abbreviation: 'be',\n        dialingCode: '+32',\n        svg:'',\n    },\n    {\n        name: 'Burkina Faso',\n        abbreviation: 'bf',\n        dialingCode: '+226',\n        svg:'',\n    },\n    {\n        name: 'Bulgaria',\n        abbreviation: 'bg',\n        dialingCode: '+359',\n        svg:'',\n    },\n    {\n        name: 'Bahrain',\n        abbreviation: 'bh',\n        dialingCode: '+973',\n        svg:'',\n    },\n    {\n        name: 'Burundi',\n        abbreviation: 'bi',\n        dialingCode: '+257',\n        svg:'',\n    },\n    {\n        name: 'Benin',\n        abbreviation: 'bj',\n        dialingCode: '+229',\n        svg:'',\n    },\n    {\n        name: 'Saint Barthélemy',\n        abbreviation: 'bl',\n        dialingCode: '+590',\n        svg:'',\n    },\n    {\n        name: 'Bermuda',\n        abbreviation: 'bm',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Brunei',\n        abbreviation: 'bn',\n        dialingCode: '+673',\n        svg:'',\n    },\n    {\n        name: 'Bolivia',\n        abbreviation: 'bo',\n        dialingCode: '+591',\n        svg:'',\n    },\n    {\n        name: 'Bonaire',\n        abbreviation: 'bq',\n        dialingCode: '+599',\n        svg:'',\n    },\n    {\n        name: 'Brazil',\n        abbreviation: 'br',\n        dialingCode: '+55',\n        svg:'',\n    },\n    {\n        name: 'The Bahamas',\n        abbreviation: 'bs',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Bhutan',\n        abbreviation: 'bt',\n        dialingCode: '+975',\n        svg:'',\n    },\n    {\n        name: 'Bouvet Island',\n        abbreviation: 'bv',\n        dialingCode: '',\n        svg:'',\n    },\n    {\n        name: 'Botswana',\n        abbreviation: 'bw',\n        dialingCode: '+267',\n        svg:'',\n    },\n    {\n        name: 'Belarus',\n        abbreviation: 'by',\n        dialingCode: '+375',\n        svg:'',\n    },\n    {\n        name: 'Belize',\n        abbreviation: 'bz',\n        dialingCode: '+501',\n        svg:'',\n    },\n    {\n        name: 'Canada',\n        abbreviation: 'ca',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Cocos Islands',\n        abbreviation: 'cc',\n        dialingCode: '+61',\n        svg:'',\n    },\n    {\n        name: 'Democratic Republic of the Congo',\n        abbreviation: 'cd',\n        dialingCode: '+243',\n        svg:'',\n    },\n    {\n        name: 'Central African Republic',\n        abbreviation: 'cf',\n        dialingCode: '+236',\n        svg:'',\n    },\n    {\n        name: 'Republic of the Congo',\n        abbreviation: 'cg',\n        dialingCode: '+242',\n        svg:'',\n    },\n    {\n        name: 'Switzerland',\n        abbreviation: 'ch',\n        dialingCode: '+41',\n        svg:'',\n    },\n    {\n        name: 'Ivory Coast',\n        abbreviation: 'ci',\n        dialingCode: '+225',\n        svg:'',\n    },\n    {\n        name: 'Cook Islands',\n        abbreviation: 'ck',\n        dialingCode: '+682',\n        svg:'',\n    },\n    {\n        name: 'Chile',\n        abbreviation: 'cl',\n        dialingCode: '+56',\n        svg:'',\n    },\n    {\n        name: 'Cameroon',\n        abbreviation: 'cm',\n        dialingCode: '+237',\n        svg:'',\n    },\n    {\n        name: 'China',\n        abbreviation: 'cn',\n        dialingCode: '+86',\n        svg:'',\n    },\n    {\n        name: 'Colombia',\n        abbreviation: 'co',\n        dialingCode: '+57',\n        svg:'',\n    },\n    {\n        name: 'Costa Rica',\n        abbreviation: 'cr',\n        dialingCode: '+506',\n        svg:'',\n    },\n    {\n        name: 'Cuba',\n        abbreviation: 'cu',\n        dialingCode: '+53',\n        svg:'',\n    },\n    {\n        name: 'Cape Verde',\n        abbreviation: 'cv',\n        dialingCode: '+238',\n        svg:'',\n    },\n    {\n        name: 'Curaçao',\n        abbreviation: 'cw',\n        dialingCode: '+599',\n        svg:'',\n    },\n    {\n        name: 'Christmas Island',\n        abbreviation: 'cx',\n        dialingCode: '+61',\n        svg:'',\n    },\n    {\n        name: 'Cyprus',\n        abbreviation: 'cy',\n        dialingCode: '+357',\n        svg:'',\n    },\n    {\n        name: 'Czechia',\n        abbreviation: 'cz',\n        dialingCode: '+420',\n        svg:'',\n    },\n    {\n        name: 'Germany',\n        abbreviation: 'de',\n        dialingCode: '+49',\n        svg:'',\n    },\n    {\n        name: 'Djibouti',\n        abbreviation: 'dj',\n        dialingCode: '+253',\n        svg:'',\n    },\n    {\n        name: 'Denmark',\n        abbreviation: 'dk',\n        dialingCode: '+45',\n        svg:'',\n    },\n    {\n        name: 'Dominica',\n        abbreviation: 'dm',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Dominican Republic',\n        abbreviation: 'do',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Algeria',\n        abbreviation: 'dz',\n        dialingCode: '+213',\n        svg:'',\n    },\n    {\n        name: 'Ecuador',\n        abbreviation: 'ec',\n        dialingCode: '+593',\n        svg:'',\n    },\n    {\n        name: 'Estonia',\n        abbreviation: 'ee',\n        dialingCode: '+372',\n        svg:'',\n    },\n    {\n        name: 'Egypt',\n        abbreviation: 'eg',\n        dialingCode: '+20',\n        svg:'',\n    },\n    {\n        name: 'Western Sahara',\n        abbreviation: 'eh',\n        dialingCode: '+212',\n        svg:'',\n    },\n    {\n        name: 'Eritrea',\n        abbreviation: 'er',\n        dialingCode: '+291',\n        svg:'',\n    },\n    {\n        name: 'Spain',\n        abbreviation: 'es',\n        dialingCode: '+34',\n        svg:'',\n    },\n    {\n        name: 'Ethiopia',\n        abbreviation: 'et',\n        dialingCode: '+251',\n        svg:'',\n    },\n    {\n        name: 'European Union',\n        abbreviation: 'eu',\n        dialingCode: '', // No specific dialing code\n        svg:'',\n    },\n    {\n        name: 'Finland',\n        abbreviation: 'fi',\n        dialingCode: '+358',\n        svg:'',\n    },\n    {\n        name: 'Fiji',\n        abbreviation: 'fj',\n        dialingCode: '+679',\n        svg:'',\n    },\n    {\n        name: 'Falkland Islands',\n        abbreviation: 'fk',\n        dialingCode: '+500',\n        svg:'',\n    },\n    {\n        name: 'Micronesia',\n        abbreviation: 'fm',\n        dialingCode: '+691',\n        svg:'',\n    },\n    {\n        name: 'Faroe Islands',\n        abbreviation: 'fo',\n        dialingCode: '+298',\n        svg:'',\n    },\n    {\n        name: 'France',\n        abbreviation: 'fr',\n        dialingCode: '+33',\n        svg:'',\n    },\n    {\n        name: 'Gabon',\n        abbreviation: 'ga',\n        dialingCode: '+241',\n        svg:'',\n    },\n    {\n        name: 'United Kingdom',\n        abbreviation: 'gb',\n        dialingCode: '+44',\n        svg:'',\n    },\n    {\n        name: 'Grenada',\n        abbreviation: 'gd',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Georgia',\n        abbreviation: 'ge',\n        dialingCode: '+995',\n        svg:'',\n    },\n    {\n        name: 'French Guiana',\n        abbreviation: 'gf',\n        dialingCode: '+594',\n        svg:'',\n    },\n    {\n        name: 'Guernsey',\n        abbreviation: 'gg',\n        dialingCode: '+44',\n        svg:'',\n    },\n    {\n        name: 'Ghana',\n        abbreviation: 'gh',\n        dialingCode: '+233',\n        svg:'',\n    },\n    {\n        name: 'Gibraltar',\n        abbreviation: 'gi',\n        dialingCode: '+350',\n        svg:'',\n    },\n    {\n        name: 'Greenland',\n        abbreviation: 'gl',\n        dialingCode: '+299',\n        svg:'',\n    },\n    {\n        name: 'Gambia',\n        abbreviation: 'gm',\n        dialingCode: '+220',\n        svg:'',\n    },\n    {\n        name: 'Guinea',\n        abbreviation: 'gn',\n        dialingCode: '+224',\n        svg:'',\n    },\n    {\n        name: 'Guadeloupe',\n        abbreviation: 'gp',\n        dialingCode: '+590',\n        svg:'',\n    },\n    {\n        name: 'Equatorial Guinea',\n        abbreviation: 'gq',\n        dialingCode: '+240',\n        svg:'',\n    },\n    {\n        name: 'Greece',\n        abbreviation: 'gr',\n        dialingCode: '+30',\n        svg:'',\n    },\n    {\n        name: 'South Georgia and the South Sandwich Islands',\n        abbreviation: 'gs',\n        dialingCode: '', // No specific dialing code\n        svg:'',\n    },\n    {\n        name: 'Guatemala',\n        abbreviation: 'gt',\n        dialingCode: '+502',\n        svg:'',\n    },\n    {\n        name: 'Guam',\n        abbreviation: 'gu',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Guinea-Bissau',\n        abbreviation: 'gw',\n        dialingCode: '+245',\n        svg:'',\n    },\n    {\n        name: 'Guyana',\n        abbreviation: 'gy',\n        dialingCode: '+592',\n        svg:'',\n    },\n    {\n        name: 'Hong Kong',\n        abbreviation: 'hk',\n        dialingCode: '+852',\n        svg:'',\n    },\n    {\n        name: 'Heard Island and McDonald Islands',\n        abbreviation: 'hm',\n        dialingCode: '', // No specific dialing code\n        svg:'',\n    },\n    {\n        name: 'Honduras',\n        abbreviation: 'hn',\n        dialingCode: '+504',\n        svg:'',\n    },\n    {\n        name: 'Croatia',\n        abbreviation: 'hr',\n        dialingCode: '+385',\n        svg:'',\n    },\n    {\n        name: 'Haiti',\n        abbreviation: 'ht',\n        dialingCode: '+509',\n        svg:'',\n    },\n    {\n        name: 'Hungary',\n        abbreviation: 'hu',\n        dialingCode: '+36',\n        svg:'',\n    },\n    {\n        name: 'Indonesia',\n        abbreviation: 'id',\n        dialingCode: '+62',\n        svg:'',\n    },\n    {\n        name: 'Ireland',\n        abbreviation: 'ie',\n        dialingCode: '+353',\n        svg:'',\n    },\n    {\n        name: 'Israel',\n        abbreviation: 'il',\n        dialingCode: '+972',\n        svg:'',\n    },\n    {\n        name: 'Isle of Man',\n        abbreviation: 'im',\n        dialingCode: '+44',\n        svg:'',\n    },\n    {\n        name: 'India',\n        abbreviation: 'in',\n        dialingCode: '+91',\n        svg:'',\n    },\n    {\n        name: 'British Indian Ocean Territory',\n        abbreviation: 'io',\n        dialingCode: '+246',\n        svg:'',\n    },\n    {\n        name: 'Iraq',\n        abbreviation: 'iq',\n        dialingCode: '+964',\n        svg:'',\n    },\n    {\n        name: 'Iran',\n        abbreviation: 'ir',\n        dialingCode: '+98',\n        svg:'',\n    },\n    {\n        name: 'Iceland',\n        abbreviation: 'is',\n        dialingCode: '+354',\n        svg:'',\n    },\n    {\n        name: 'Italy',\n        abbreviation: 'it',\n        dialingCode: '+39',\n        svg:'',\n    },\n    {\n        name: 'Jersey',\n        abbreviation: 'je',\n        dialingCode: '+44',\n        svg:'',\n    },\n    {\n        name: 'Jamaica',\n        abbreviation: 'jm',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Jordan',\n        abbreviation: 'jo',\n        dialingCode: '+962',\n        svg:'',\n    },\n    {\n        name: 'Japan',\n        abbreviation: 'jp',\n        dialingCode: '+81',\n        svg:'',\n    },\n    {\n        name: 'Kenya',\n        abbreviation: 'ke',\n        dialingCode: '+254',\n        svg:'',\n    },\n    {\n        name: 'Kyrgyzstan',\n        abbreviation: 'kg',\n        dialingCode: '+996',\n        svg:'',\n    },\n    {\n        name: 'Cambodia',\n        abbreviation: 'kh',\n        dialingCode: '+855',\n        svg:'',\n    },\n    {\n        name: 'Kiribati',\n        abbreviation: 'ki',\n        dialingCode: '+686',\n        svg:'',\n    },\n    {\n        name: 'Comoros',\n        abbreviation: 'km',\n        dialingCode: '+269',\n        svg:'',\n    },\n    {\n        name: 'Saint Kitts and Nevis',\n        abbreviation: 'kn',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'North Korea',\n        abbreviation: 'kp',\n        dialingCode: '+850',\n        svg:'',\n    },\n    {\n        name: 'South Korea',\n        abbreviation: 'kr',\n        dialingCode: '+82',\n        svg:'',\n    },\n    {\n        name: 'Kuwait',\n        abbreviation: 'kw',\n        dialingCode: '+965',\n        svg:'',\n    },\n    {\n        name: 'Cayman Islands',\n        abbreviation: 'ky',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Kazakhstan',\n        abbreviation: 'kz',\n        dialingCode: '+7',\n        svg:'',\n    },\n    {\n        name: 'Laos',\n        abbreviation: 'la',\n        dialingCode: '+856',\n        svg:'',\n    },\n    {\n        name: 'Lebanon',\n        abbreviation: 'lb',\n        dialingCode: '+961',\n        svg:'',\n    },\n    {\n        name: 'Saint Lucia',\n        abbreviation: 'lc',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Liechtenstein',\n        abbreviation: 'li',\n        dialingCode: '+423',\n        svg:'',\n    },\n    {\n        name: 'Sri Lanka',\n        abbreviation: 'lk',\n        dialingCode: '+94',\n        svg:'',\n    },\n    {\n        name: 'Liberia',\n        abbreviation: 'lr',\n        dialingCode: '+231',\n        svg:'',\n    },\n    {\n        name: 'Lesotho',\n        abbreviation: 'ls',\n        dialingCode: '+266',\n        svg:'',\n    },\n    {\n        name: 'Lithuania',\n        abbreviation: 'lt',\n        dialingCode: '+370',\n        svg:'',\n    },\n    {\n        name: 'Luxembourg',\n        abbreviation: 'lu',\n        dialingCode: '+352',\n        svg:'',\n    },\n    {\n        name: 'Latvia',\n        abbreviation: 'lv',\n        dialingCode: '+371',\n        svg:'',\n    },\n    {\n        name: 'Libya',\n        abbreviation: 'ly',\n        dialingCode: '+218',\n        svg:'',\n    },\n    {\n        name: 'Morocco',\n        abbreviation: 'ma',\n        dialingCode: '+212',\n        svg:'',\n    },\n    {\n        name: 'Monaco',\n        abbreviation: 'mc',\n        dialingCode: '+377',\n        svg:'',\n    },\n    {\n        name: 'Moldova',\n        abbreviation: 'md',\n        dialingCode: '+373',\n        svg:'',\n    },\n    {\n        name: 'Montenegro',\n        abbreviation: 'me',\n        dialingCode: '+382',\n        svg:'',\n    },\n    {\n        name: 'Saint Martin',\n        abbreviation: 'mf',\n        dialingCode: '+590',\n        svg:'',\n    },\n    {\n        name: 'Madagascar',\n        abbreviation: 'mg',\n        dialingCode: '+261',\n        svg:'',\n    },\n    {\n        name: 'Marshall Islands',\n        abbreviation: 'mh',\n        dialingCode: '+692',\n        svg:'',\n    },\n    {\n        name: 'North Macedonia',\n        abbreviation: 'mk',\n        dialingCode: '+389',\n        svg:'',\n    },\n    {\n        name: 'Mali',\n        abbreviation: 'ml',\n        dialingCode: '+223',\n        svg:'',\n    },\n    {\n        name: 'Myanmar',\n        abbreviation: 'mm',\n        dialingCode: '+95',\n        svg:'',\n    },\n    {\n        name: 'Mongolia',\n        abbreviation: 'mn',\n        dialingCode: '+976',\n        svg:'',\n    },\n    {\n        name: 'Macao',\n        abbreviation: 'mo',\n        dialingCode: '+853',\n        svg:'',\n    },\n    {\n        name: 'Northern Mariana Islands',\n        abbreviation: 'mp',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Martinique',\n        abbreviation: 'mq',\n        dialingCode: '+596',\n        svg:'',\n    },\n    {\n        name: 'Mauritania',\n        abbreviation: 'mr',\n        dialingCode: '+222',\n        svg:'',\n    },\n    {\n        name: 'Montserrat',\n        abbreviation: 'ms',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Malta',\n        abbreviation: 'mt',\n        dialingCode: '+356',\n        svg:'',\n    },\n    {\n        name: 'Mauritius',\n        abbreviation: 'mu',\n        dialingCode: '+230',\n        svg:'',\n    },\n    {\n        name: 'Maldives',\n        abbreviation: 'mv',\n        dialingCode: '+960',\n        svg:'',\n    },\n    {\n        name: 'Malawi',\n        abbreviation: 'mw',\n        dialingCode: '+265',\n        svg:'',\n    },\n    {\n        name: 'Mexico',\n        abbreviation: 'mx',\n        dialingCode: '+52',\n        svg:'',\n    },\n    {\n        name: 'Malaysia',\n        abbreviation: 'my',\n        dialingCode: '+60',\n        svg:'',\n    },\n    {\n        name: 'Mozambique',\n        abbreviation: 'mz',\n        dialingCode: '+258',\n        svg:'',\n    },\n    {\n        name: 'Namibia',\n        abbreviation: 'na',\n        dialingCode: '+264',\n        svg:'',\n    },\n    {\n        name: 'New Caledonia',\n        abbreviation: 'nc',\n        dialingCode: '+687',\n        svg:'',\n    },\n    {\n        name: 'Niger',\n        abbreviation: 'ne',\n        dialingCode: '+227',\n        svg:'',\n    },\n    {\n        name: 'Norfolk Island',\n        abbreviation: 'nf',\n        dialingCode: '+672',\n        svg:'',\n    },\n    {\n        name: 'Nigeria',\n        abbreviation: 'ng',\n        dialingCode: '+234',\n        svg:'',\n    },\n    {\n        name: 'Nicaragua',\n        abbreviation: 'ni',\n        dialingCode: '+505',\n        svg:'',\n    },\n    {\n        name: 'Netherlands',\n        abbreviation: 'nl',\n        dialingCode: '+31',\n        svg:'',\n    },\n    {\n        name: 'Norway',\n        abbreviation: 'no',\n        dialingCode: '+47',\n        svg:'',\n    },\n    {\n        name: 'Nepal',\n        abbreviation: 'np',\n        dialingCode: '+977',\n        svg:'',\n    },\n    {\n        name: 'Nauru',\n        abbreviation: 'nr',\n        dialingCode: '+674',\n        svg:'',\n    },\n    {\n        name: 'Niue',\n        abbreviation: 'nu',\n        dialingCode: '+683',\n        svg:'',\n    },\n    {\n        name: 'New Zealand',\n        abbreviation: 'nz',\n        dialingCode: '+64',\n        svg:'',\n    },\n    {\n        name: 'Oman',\n        abbreviation: 'om',\n        dialingCode: '+968',\n        svg:'',\n    },\n    {\n        name: 'Panama',\n        abbreviation: 'pa',\n        dialingCode: '+507',\n        svg:'',\n    },\n    {\n        name: 'Peru',\n        abbreviation: 'pe',\n        dialingCode: '+51',\n        svg:'',\n    },\n    {\n        name: 'French Polynesia',\n        abbreviation: 'pf',\n        dialingCode: '+689',\n        svg:'',\n    },\n    {\n        name: 'Papua New Guinea',\n        abbreviation: 'pg',\n        dialingCode: '+675',\n        svg:'',\n    },\n    {\n        name: 'Philippines',\n        abbreviation: 'ph',\n        dialingCode: '+63',\n        svg:'',\n    },\n    {\n        name: 'Pakistan',\n        abbreviation: 'pk',\n        dialingCode: '+92',\n        svg:'',\n    },\n    {\n        name: 'Poland',\n        abbreviation: 'pl',\n        dialingCode: '+48',\n        svg:'',\n    },\n    {\n        name: 'Saint Pierre and Miquelon',\n        abbreviation: 'pm',\n        dialingCode: '+508',\n        svg:'',\n    },\n    {\n        name: 'Pitcairn Islands',\n        abbreviation: 'pn',\n        dialingCode: '+64',\n        svg:'',\n    },\n    {\n        name: 'Puerto Rico',\n        abbreviation: 'pr',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Palestine',\n        abbreviation: 'ps',\n        dialingCode: '+970',\n        svg:'',\n    },\n    {\n        name: 'Portugal',\n        abbreviation: 'pt',\n        dialingCode: '+351',\n        svg:'',\n    },\n    {\n        name: 'Palau',\n        abbreviation: 'pw',\n        dialingCode: '+680',\n        svg:'',\n    },\n    {\n        name: 'Paraguay',\n        abbreviation: 'py',\n        dialingCode: '+595',\n        svg:'',\n    },\n    {\n        name: 'Qatar',\n        abbreviation: 'qa',\n        dialingCode: '+974',\n        svg:'',\n    },\n    {\n        name: 'Réunion',\n        abbreviation: 're',\n        dialingCode: '+262',\n        svg:'',\n    },\n    {\n        name: 'Romania',\n        abbreviation: 'ro',\n        dialingCode: '+40',\n        svg:'',\n    },\n    {\n        name: 'Serbia',\n        abbreviation: 'rs',\n        dialingCode: '+381',\n        svg:'',\n    },\n    {\n        name: 'Russia',\n        abbreviation: 'ru',\n        dialingCode: '+7',\n        svg:'',\n    },\n    {\n        name: 'Rwanda',\n        abbreviation: 'rw',\n        dialingCode: '+250',\n        svg:'',\n    },\n    {\n        name: 'Saudi Arabia',\n        abbreviation: 'sa',\n        dialingCode: '+966',\n        svg:'',\n    },\n    {\n        name: 'Solomon Islands',\n        abbreviation: 'sb',\n        dialingCode: '+677',\n        svg:'',\n    },\n    {\n        name: 'Seychelles',\n        abbreviation: 'sc',\n        dialingCode: '+248',\n        svg:'',\n    },\n    {\n        name: 'Sudan',\n        abbreviation: 'sd',\n        dialingCode: '+249',\n        svg:'',\n    },\n    {\n        name: 'Sweden',\n        abbreviation: 'se',\n        dialingCode: '+46',\n        svg:'',\n    },\n    {\n        name: 'Singapore',\n        abbreviation: 'sg',\n        dialingCode: '+65',\n        svg:'',\n    },\n    {\n        name: 'Saint Helena',\n        abbreviation: 'sh',\n        dialingCode: '+290',\n        svg:'',\n    },\n    {\n        name: 'Slovenia',\n        abbreviation: 'si',\n        dialingCode: '+386',\n        svg:'',\n    },\n    {\n        name: 'Svalbard and Jan Mayen',\n        abbreviation: 'sj',\n        dialingCode: '+47',\n        svg:'',\n    },\n    {\n        name: 'Slovakia',\n        abbreviation: 'sk',\n        dialingCode: '+421',\n        svg:'',\n    },\n    {\n        name: 'Sierra Leone',\n        abbreviation: 'sl',\n        dialingCode: '+232',\n        svg:'',\n    },\n    {\n        name: 'San Marino',\n        abbreviation: 'sm',\n        dialingCode: '+378',\n        svg:'',\n    },\n    {\n        name: 'Senegal',\n        abbreviation: 'sn',\n        dialingCode: '+221',\n        svg:'',\n    },\n    {\n        name: 'Somalia',\n        abbreviation: 'so',\n        dialingCode: '+252',\n        svg:'',\n    },\n    {\n        name: 'Suriname',\n        abbreviation: 'sr',\n        dialingCode: '+597',\n        svg:'',\n    },\n    {\n        name: 'South Sudan',\n        abbreviation: 'ss',\n        dialingCode: '+211',\n        svg:'',\n    },\n    {\n        name: 'São Tomé and Príncipe',\n        abbreviation: 'st',\n        dialingCode: '+239',\n        svg:'',\n    },\n    {\n        name: 'El Salvador',\n        abbreviation: 'sv',\n        dialingCode: '+503',\n        svg:'',\n    },\n    {\n        name: 'Sint Maarten',\n        abbreviation: 'sx',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Syria',\n        abbreviation: 'sy',\n        dialingCode: '+963',\n        svg:'',\n    },\n    {\n        name: 'Eswatini',\n        abbreviation: 'sz',\n        dialingCode: '+268',\n        svg:'',\n    },\n    {\n        name: 'Turks and Caicos Islands',\n        abbreviation: 'tc',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Chad',\n        abbreviation: 'td',\n        dialingCode: '+235',\n        svg:'',\n    },\n    {\n        name: 'French Southern Territories',\n        abbreviation: 'tf',\n        dialingCode: '', // No specific dialing code\n        svg:'',\n    },\n    {\n        name: 'Togo',\n        abbreviation: 'tg',\n        dialingCode: '+228',\n        svg:'',\n    },\n    {\n        name: 'Thailand',\n        abbreviation: 'th',\n        dialingCode: '+66',\n        svg:'',\n    },\n    {\n        name: 'Tajikistan',\n        abbreviation: 'tj',\n        dialingCode: '+992',\n        svg:'',\n    },\n    {\n        name: 'Tokelau',\n        abbreviation: 'tk',\n        dialingCode: '+690',\n        svg:'',\n    },\n    {\n        name: 'Timor-Leste',\n        abbreviation: 'tl',\n        dialingCode: '+670',\n        svg:'',\n    },\n    {\n        name: 'Turkmenistan',\n        abbreviation: 'tm',\n        dialingCode: '+993',\n        svg:'',\n    },\n    {\n        name: 'Tunisia',\n        abbreviation: 'tn',\n        dialingCode: '+216',\n        svg:'',\n    },\n    {\n        name: 'Tonga',\n        abbreviation: 'to',\n        dialingCode: '+676',\n        svg:'',\n    },\n    {\n        name: 'Turkey',\n        abbreviation: 'tr',\n        dialingCode: '+90',\n        svg:'',\n    },\n    {\n        name: 'Trinidad and Tobago',\n        abbreviation: 'tt',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Tuvalu',\n        abbreviation: 'tv',\n        dialingCode: '+688',\n        svg:'',\n    },\n    {\n        name: 'Taiwan',\n        abbreviation: 'tw',\n        dialingCode: '+886',\n        svg:'',\n    },\n    {\n        name: 'Tanzania',\n        abbreviation: 'tz',\n        dialingCode: '+255',\n        svg:'',\n    },\n    {\n        name: 'Ukraine',\n        abbreviation: 'ua',\n        dialingCode: '+380',\n        svg:'',\n    },\n    {\n        name: 'Uganda',\n        abbreviation: 'ug',\n        dialingCode: '+256',\n        svg:'',\n    },\n    {\n        name: 'United States Minor Outlying Islands',\n        abbreviation: 'um',\n        dialingCode: '', // No specific dialing code\n        svg:'',\n    },\n    {\n        name: 'United States',\n        abbreviation: 'us',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Uruguay',\n        abbreviation: 'uy',\n        dialingCode: '+598',\n        svg:'',\n    },\n    {\n        name: 'Uzbekistan',\n        abbreviation: 'uz',\n        dialingCode: '+998',\n        svg:'',\n    },\n    {\n        name: 'Vatican City',\n        abbreviation: 'va',\n        dialingCode: '+379',\n        svg:'',\n    },\n    {\n        name: 'Saint Vincent and the Grenadines',\n        abbreviation: 'vc',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Venezuela',\n        abbreviation: 've',\n        dialingCode: '+58',\n        svg:'',\n    },\n    {\n        name: 'British Virgin Islands',\n        abbreviation: 'vg',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'U.S. Virgin Islands',\n        abbreviation: 'vi',\n        dialingCode: '+1',\n        svg:'',\n    },\n    {\n        name: 'Vietnam',\n        abbreviation: 'vn',\n        dialingCode: '+84',\n        svg:'',\n    },\n    {\n        name: 'Vanuatu',\n        abbreviation: 'vu',\n        dialingCode: '+678',\n        svg:'',\n    },\n    {\n        name: 'Wallis and Futuna',\n        abbreviation: 'wf',\n        dialingCode: '+681',\n        svg:'',\n    },\n    {\n        name: 'Kosovo',\n        abbreviation: 'xk',\n        dialingCode: '+383',\n        svg:'',\n    },\n    {\n        name: 'Yemen',\n        abbreviation: 'ye',\n        dialingCode: '+967',\n        svg:'',\n    },\n    {\n        name: 'Mayotte',\n        abbreviation: 'yt',\n        dialingCode: '+262',\n        svg:'',\n    },\n    {\n        name: 'South Africa',\n        abbreviation: 'za',\n        dialingCode: '+27',\n        svg:'',\n    },\n    {\n        name: 'Zambia',\n        abbreviation: 'zm',\n        dialingCode: '+260',\n        svg:'',\n    },\n    {\n        name: 'Zimbabwe',\n        abbreviation: 'zw',\n        dialingCode: '+263',\n        svg:'',\n    },\n];\n\n// countries array to big to copy into question \n\n// Quicker way of assigning the countries SVG values\n\nfunction populateSvgForCountries(countries) {\n    for (const country of countries) {\n      // Assuming 'abbreviation' is available and 'svg' is missing.\n      if (country.abbreviation && !country.svg) {\n        country.svg = `${country.abbreviation}.svg`;\n      }\n    }\n}\n\ncountries.sort((a, b) => a.name.localeCompare(b.name));\n\npopulateSvgForCountries(countries);\n\nexport const filteredCountries = countries.filter(country => country.dialingCode !== '');\n\nexport const customOptions = filteredCountries.map((country) => ({\n      value: country.dialingCode,\n      label: (\n        <div>\n          <img\n            src={require(`../images/flags/${country.svg}`)}\n            className=\"flag-image\"\n            alt={`${country.name} flag`}\n          />\n          <span className='country-option'>\n            {country.name} ({country.dialingCode})\n          </span>\n        </div>\n      ),\n}));","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreateAccountComponent.js",["175","176"],[],"import React from 'react';\nimport errorImage from '../images/Daco_5575399.png';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport CustomNextButton from './CustomNextButton';\n\nexport const CreateAccountcomponent = ({ \n    firstName,\n    lastName,\n    handleNextClick,\n    isImagePreloaded,\n    onFirstNameInputChange,\n    onLastNameInputChange,\n    errorCondition,\n}) => {\n\n    return (\n        <form>\n\n            <h1 class=\"thin h1-space\">Create a Google Account</h1>\n            <h2 class='thin gap'>Enter your name</h2>\n\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1.25},\n                    width: 363,\n                    maxWidth: '100%',\n                }}\n            >\n                <TextField \n                    error={errorCondition}\n                    id=\"firstNameInput\" \n                    label=\"First Name\" \n                    variant=\"outlined\" \n                    fullWidth\n                    value={firstName}\n                    onChange={onFirstNameInputChange}\n                    InputLabelProps={\n                        errorCondition ? \n                        { \n                            sx: {\n                                color: firstName ? '#d32f2f' : 'rgba(0, 0, 0, 0.6) !important',\n                                '&.Mui-focused': {\n                                    color: '#d32f2f !important',\n                                },\n                            },\n                        } : {}\n                    }\n                    sx={\n                        errorCondition ? \n                        {} : \n                        {\n                            \"& .MuiOutlinedInput-root\": {\n                                \"&:hover:not(.Mui-focused) fieldset\": {\n                                    borderColor: \"#dadce0\"\n                                },\n                                \"& fieldset\": {\n                                    borderColor: \"#dadce0\"\n                                },\n                            }\n                        }\n                    }\n                />\n                <TextField \n                    label=\"Last Name (optional)\"\n                    className='last-name-margin-top' \n                    variant=\"outlined\" \n                    fullWidth\n                    value={lastName}\n                    onChange={onLastNameInputChange}\n                    sx={{\n                        \"& .MuiOutlinedInput-root\": {\n                            \"&:hover:not(.Mui-focused) fieldset\": {\n                              borderColor: \"#dadce0\"\n                            },\n                            \"& fieldset\": {\n                                borderColor: \"#dadce0\"\n                            },\n                        },\n                    }}\n                />       \n            </Box>\n\n            {errorCondition === \"firstNameEmpty\" && isImagePreloaded ? (\n                <div class='error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter first name</p>\n                </div>\n            ) : errorCondition === \"areYouSureCorrect\" && isImagePreloaded ? (\n                <div class='error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Are you sure you entered your name correctly?</p>\n                </div>\n            ) : (\n                <div className='hidden-error-message-container-create-account'></div>\n            )} \n\n            <div class={errorCondition === \"firstNameEmpty\" || errorCondition === \"areYouSureCorrect\" ? 'button-right-first-name-empty' : 'button-right'}>\n                <CustomNextButton \n                    variant=\"contained\" \n                    onClick={handleNextClick}\n                    sx={{\n                        '&& .MuiTouchRipple-rippleVisible': {\n                            animationDuration: '300ms',\n                        },\n                    }}\n                >\n                    Next\n                </CustomNextButton>\n            </div>\n\n        </form>\n    );\n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\SignInFrontPageComponent.js",["177","178"],[],"import React from \"react\";\nimport errorImage from '../images/Daco_5575399.png';\n\nexport const SignInFrontPageComponent = ({ \n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleSubmit,\n    handlePasswordClick, \n    handleEmailClick,\n    emailPlaceholder,\n    passwordPlaceholder,\n    handleEmailBlur,\n    handlePasswordBlur,\n    handleCreateAccountClick,\n    emailIsEmpty,\n    passwordIsEmpty,\n    isImagePreloaded\n}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h1 class=\"thin h1-space\">Sign In</h1>\n\n            <h2 class='thin gap'>to continue to Gmail</h2>\n\n            <label class=\"space line-height label-input-width input-label\">\n                <input \n                    class={`${emailIsEmpty ? 'error' : \"input\"}`}\n                    id='emailInput'\n                    type='text' \n                    value={email} \n                    placeholder={emailPlaceholder}\n                    onFocus={handleEmailClick}\n                    onBlur={handleEmailBlur}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </label>\n\n            {emailIsEmpty && isImagePreloaded && (\n                <div class='error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter first name</p>\n                </div>\n            )}\n     \n            <label class=\"space line-height label-input-width input-label\">\n                <input \n                    class={`disable-eye-icon ${passwordIsEmpty ? 'error' : \"input\"}`}\n                    id='passwordInput'\n                    type='password'\n                    value={password}\n                    placeholder={passwordPlaceholder}\n                    onFocus={handlePasswordClick}\n                    onBlur={handlePasswordBlur}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </label>\n\n            {passwordIsEmpty && isImagePreloaded && (\n                <div class='error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter first name</p>\n                </div>\n            )}\n            \n            <button class=\"log-in-space blue-button\">\n                Login   \n            </button>\n\n\n            <p class=\"links-font-size sign-in-space-1 hyper-link\">Forgot Email?</p>\n            <p class=\"links-font-size sign-in-space hyper-link\">Forgot Password?</p>\n            <button type='button' class=\"last grey-button\" onClick={handleCreateAccountClick}>Create account</button>\n        </form>\n  );\n}\n\n\n","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\StaticElementComponent.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreatePasswordStaticElementComponent.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\FrontPageStaticComponent.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\ConfirmYoureNotARobotComponent.js",["179","180","181"],[],"import React from 'react';\nimport Select from 'react-select';\nimport errorImage from '../images/Daco_5575399.png';\nimport GBSVG from '../images/flags/gb2.svg';\n\nexport const ConfirmYoureNotARobotComponent = ({ \n    phoneNumber,\n    setPhoneNumber,\n    handlePhoneNumberClick,\n    handlePhoneNumberBlur,\n    phoneNumberPlaceholder,\n    handleNextClick,\n    isPhoneNumberEmpty,\n    isImagePreloaded,\n    isIncorrectFormat,\n    isAlreadyRegistered,\n    customOptions,\n    usersCountryFlagSVG,\n    customStyles,\n    CustomDropdownIndicator,\n}) => {\n\n    return (\n        <form>\n\n            <h1 class=\"thin\">Confirm you're not a robot</h1>\n\n            <h2 class='thin gap-cynar center' id='font-and-color-cynar-h2'>Get a verification code sent to your phone</h2>\n\n            <div id='add-phone-number-dropdown-and-input'>\n                {usersCountryFlagSVG ? (\n                    <Select\n                        styles={customStyles}\n                        class=\"flag-drop-down\"\n                        options={customOptions}\n                        components={{ DropdownIndicator: CustomDropdownIndicator}}\n                        placeholder={<img\n                                        src={require(`../images/flags/${usersCountryFlagSVG}`)}\n                                        alt=\"Flag\"\n                                        width=\"24\"\n                                        height=\"16\"\n                                    />\n                        }\n                    />\n                ) : (\n                    <Select\n                        styles={customStyles}\n                        class=\"flag-drop-down\"\n                        options={customOptions}\n                        components={{ DropdownIndicator: CustomDropdownIndicator}}\n                        placeholder={<img\n                                        src={GBSVG}\n                                        alt=\"Flag\"\n                                        width=\"24\"\n                                        height=\"16\"\n                                    />\n                        }\n                    />\n                )}\n\n                <label class=\"space-phone-number-input-cynar line-height label-input-width input-label\" id='phoneNumber-input-width'>\n                    <div class='placeholder-satic-cohersion-phone-number'>\n                        <input \n                            id='phoneNumberInput'\n                            class={isPhoneNumberEmpty ? 'error' : 'input'}\n                            type='text' \n                            value={phoneNumber} \n                            onChange={(e) => setPhoneNumber(e.target.value)} \n                            placeholder={phoneNumberPlaceholder}\n                            onFocus={handlePhoneNumberClick}\n                            onBlur={handlePhoneNumberBlur}\n                        />\n                    </div>\n                </label>\n            </div>\n\n            {isPhoneNumberEmpty && isImagePreloaded ? (\n                <div class='long-error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Please enter a phone number</p>\n                </div>\n            ) : isIncorrectFormat && isImagePreloaded ? (\n                <div class='error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">This phone number format is not recognized. Please check the country and number.</p>\n                </div>\n            ) : isAlreadyRegistered && isImagePreloaded (\n                <div class='error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">This phone number has been used too many times</p>\n                </div>\n            )}\n\n            <div class='below-input-small-grey-cynar'>\n                <p class='small-grey-cynar'>Google will verify this number via SMS (charges may apply).</p>\n            </div>\n\n            <div id='button-right-choose-email'>\n                <button type='button' class=\"button-space-confirm-youre-not-a-robot blue-button\" onClick={handleNextClick}>\n                    Next   \n                </button>\n            </div>\n\n        </form>\n    );\n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\MockMail.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\ChooseYourGmailAddressComponent.js",["182","183","184"],[],"import React from 'react';\nimport errorImage from '../images/Daco_5575399.png';\n\nexport const ChooseYourGmailAddressComponent = ({ \n    email,\n    setEmail,\n    handleEmailClick,\n    handleEmailBlur,\n    emailPlaceholder,\n    handleNextClick,\n    isUsernameEmpty,\n    isImagePreloaded,\n    isIncorrectLength,\n    usesUnallowedChars\n}) => {\n\n    return (\n        <form>\n\n            <h1 class=\"thin h1-space\">How you'll sign in</h1>\n\n            <h2 class='thin gap center' id='h2'>Create a Gmail addres for signing in to your Google Account</h2>\n\n            <label class=\"space line-height label-input-width input-label\" id='username-input-width'>\n                <div class='placeholder-satic-cohersion'>\n                    <input \n                        id='usernameInput'\n                        class={isUsernameEmpty ? 'error' : 'input'}\n                        type='text' \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)} \n                        placeholder={emailPlaceholder}\n                        onFocus={handleEmailClick}\n                        onBlur={handleEmailBlur}\n                    />\n                    <span class='static-position'>\n                        @gmail.com\n                    </span>\n                </div>\n            </label>\n\n            {isIncorrectLength && isImagePreloaded ? (\n                <div class='long-error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Sorry, your username must be between 6 and 30 characters long.</p>\n                </div>\n            ) : isUsernameEmpty && isImagePreloaded ? (\n                <div class='error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter a Gmail address</p>\n                </div>\n            ) : usesUnallowedChars && isImagePreloaded ? (\n                <div class='long-error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Sorry, only letters (a-z), numbers (0-9) and periods (.) are allowed.</p>\n                </div>\n            ) : (\n                <div class='below-input-small-grey'>\n                    <p class='small-grey'>You can use letters, numbers & periods</p>\n                </div>\n            )}\n\n            <div id='button-right-choose-email'>\n                <button type='button' class=\"button-space blue-button\" onClick={handleNextClick}>\n                    Next   \n                </button>\n            </div>\n\n        </form>\n    );\n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CreatePasswordComponent.js",["185","186","187"],[],"import React from 'react';\nimport errorImage from '../images/Daco_5575399.png';\n\nexport const CreatePasswordComponent = ({ \n    password,\n    setPassword,\n    confirmPassword,\n    setConfirmPassword,\n    passwordPlaceholder,\n    handlePasswordClick,\n    handlePasswordBlur,\n    confirmPlaceholder,\n    handleConfirmClick,\n    handleConfirmBlur,\n    handleNextClick,\n    showPassword,\n    togglePassword,\n    isImagePreloaded,\n    errorCondition\n}) => {\n\n\n    return (\n        <form>\n\n            <h1 class=\"thin h1-space\">Create a strong password</h1>\n            <div id='create-password-h2'>\n                <h2 class='thin gap center'>Create a strong password with a mix of letters, numbers and symbols</h2>\n            </div>\n\n            <label id='create-password-space'class=\" line-height label-input-width input-label\">\n                <input \n                    id='passwordInput'\n                    class={errorCondition === 'passwordAndConfirmEmpty' ? 'error' : 'input'}\n                    type={showPassword ? 'text' : 'password'}\n                    value={password} \n                    onChange={(e) => setPassword(e.target.value)} \n                    placeholder={passwordPlaceholder}\n                    onFocus={handlePasswordClick}\n                    onBlur={handlePasswordBlur}\n                />\n            </label>\n     \n            <label class=\"space line-height label-input-width input-label\" id='error-message-margin'>\n                <input \n                    id='confirmPasswordInput'\n                    class={errorCondition === 'confirmPasswordEmpty' || errorCondition === 'passwordMismatch' ? 'error' : 'input'}\n                    type={showPassword ? 'text' : 'password'}\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)} \n                    placeholder={confirmPlaceholder}\n                    onFocus={handleConfirmClick}\n                    onBlur={handleConfirmBlur}\n                />\n            </label>\n\n            {errorCondition === 'passwordAndConfirmEmpty' && isImagePreloaded && (\n                <div class='error-div' id='create-password-error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter a password</p>\n                </div>\n            )}\n\n            {errorCondition === 'confirmPasswordEmpty' && isImagePreloaded && ( \n                <div class='error-div' id='create-password-error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Confirm your password</p>\n                </div>\n            )} \n            \n            {errorCondition === 'passwordMismatch' && isImagePreloaded && (\n                <div class='error-div' id='create-password-error-div'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Those passwords didn’t match. Try again.</p>\n                </div>\n            )}\n           \n            <div className={`password-toggle ${showPassword ? 'checked' : ''}`}>\n                <label className='checkbox-text-colour custom-checkbox-label'>\n                    <input\n                        id=\"showPasswordCheckbox\"\n                        type=\"checkbox\"\n                        checked={showPassword}\n                        onChange={togglePassword}\n                        className=\"custom-checkbox-input\"\n                    />\n                    <span className=\"custom-checkbox\">\n                        <p class={`${showPassword ? 'tick-white' : 'tick-hidden'}`}>✓</p>\n                    </span>\n                    <p id='show-password-checkbox'>Show Password</p>\n                </label>\n            </div>\n            \n            <div id='create-password-next-button'>\n                <button class=\"button-space-create-password blue-button\" type=\"button\" onClick={handleNextClick}>\n                    Next   \n                </button>\n            </div>\n\n        </form>\n    );\n}\n","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\AddRecoveryEmailComponent.js",["188","189","190"],[],"import React from 'react';\nimport errorImage from '../images/Daco_5575399.png';\n\nexport const AddRecoveryEmailComponent = ({ \n    recoveryEmail,\n    setRecoveryEmail,\n    recoveryEmailPlaceholder,\n    handleRecoveryEmailClick,\n    handleRecoveryEmailBlur,\n    handleNextClick,\n    isImagePreloaded,\n    errorCondition,\n    handleSkip,\n    handleSubmit\n}) => {\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h1 class=\"thin h1-space\">Add recovery email</h1>\n            <div id='reduce-width-h2'>\n                <h2 class='thin gap center'>The address where Google can contact you if there’s unusual activity in your account or if you get locked out.</h2>\n            </div>\n\n            <label id='create-password-space'class=\" line-height label-input-width input-label\">\n                <input \n                    id='recoveryEmailInput'\n                    class={errorCondition === 'enterValidEmail' || errorCondition === 'passwordMismatch' || errorCondition === 'dontForgetAtSymbol' || errorCondition === 'enterADomainName' ? 'error' : 'input'}\n                    type='text'\n                    value={recoveryEmail} \n                    onChange={(e) => setRecoveryEmail(e.target.value)} \n                    placeholder={recoveryEmailPlaceholder}\n                    onFocus={handleRecoveryEmailClick}\n                    onBlur={handleRecoveryEmailBlur}\n                />\n            </label>\n     \n            {errorCondition === 'enterValidEmail' && isImagePreloaded && (\n                <div class='error-div-add-recovery-email'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter a valid email</p>\n                </div>\n            )}\n\n            {errorCondition === 'dontForgetAtSymbol' && isImagePreloaded && ( \n                <div class='error-div-add-recovery-email'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Don't forget to include the '@'.</p>\n                </div>\n            )} \n            \n            {errorCondition === 'enterADomainName' && isImagePreloaded && (\n                <div class='error-div-add-recovery-email'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Enter a domain name after the '@'.</p>\n                </div>\n            )}\n            \n            <div class='next-and-skip-button-duo'>\n                <button class=\"button-space-add-recovery-email white-button\" type=\"submit\" onClick={handleNextClick}>\n                        Next   \n                </button>\n                <button class=\"button-space-add-recovery-email white-button\" type=\"button\" onClick={handleSkip}>\n                        Skip   \n                </button>\n            </div>\n\n        </form>\n    );\n}\n","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\AddPhoneNumberComponent.js",["191","192","193","194"],[],"import React from 'react';\nimport Select from 'react-select';\nimport errorImage from '../images/Daco_5575399.png';\nimport GBSVG from '../images/flags/gb2.svg';\nimport dropDownImageSVG from '../images/drop-down-svg.svg';\n\nexport const AddPhoneNumberComponent = ({ \n    phoneNumber,\n    setPhoneNumber,\n    handlePhoneNumberClick,\n    handlePhoneNumberBlur,\n    phoneNumberPlaceholder,\n    handleNextClick,\n    handleSkip,\n    isPhoneNumberEmpty,\n    isImagePreloaded,\n    isIncorrectFormat,\n    isAlreadyRegistered,\n    usersCountryTopSeparateOptions,\n    usersCountryFlagSVG,\n    customStyles,\n    CustomDropdownIndicator,\n    setIsOpen,\n    isSelectionMade\n}) => {\n\n    return (\n\n        <form className='phone-number-form'>\n\n            <h1 class=\"thin h1-space-phone-number\">Add phone number</h1>\n\n            <div id='add-phone-number-dropdown-and-input'>\n                {usersCountryFlagSVG ? (\n                    <Select\n                        styles={customStyles}\n                        onMenuOpen={() => setIsOpen(true)}\n                        onMenuClose={() => setIsOpen(false)}\n                        class=\"flag-drop-down\"\n                        options={usersCountryTopSeparateOptions}\n                        components={{ DropdownIndicator: CustomDropdownIndicator}}\n                        placeholder={isSelectionMade ? '' : <img\n                                                                src={require(`../images/flags/${usersCountryFlagSVG}`)}\n                                                                alt=\"Flag\"\n                                                                width=\"24\"\n                                                                height=\"16\"\n                                                            />\n                        }\n                        menuIsOpen={true}\n                    />\n                ) : (\n                    <Select\n                        styles={customStyles}\n                        onMenuOpen={() => setIsOpen(true)}\n                        onMenuClose={() => setIsOpen(false)}\n                        class=\"flag-drop-down\"\n                        options={usersCountryTopSeparateOptions}\n                        components={{ DropdownIndicator: CustomDropdownIndicator}}\n                        placeholder={isSelectionMade ? '' : <img\n                                                                src={GBSVG}\n                                                                alt=\"Flag\"\n                                                                width=\"24\"\n                                                                height=\"16\"\n                                                            />\n                        }\n                    />\n                )}\n\n                <label class=\"space-phone-number-input line-height label-input-width input-label\" id='phoneNumber-input-width'>\n                    <div class='placeholder-satic-cohersion-phone-number'>\n                        <input \n                            id='phoneNumberInput'\n                            class={isPhoneNumberEmpty ? 'short-error' : 'short-input'}\n                            type='text' \n                            value={phoneNumber} \n                            onChange={(e) => setPhoneNumber(e.target.value)} \n                            placeholder={phoneNumberPlaceholder}\n                            onFocus={handlePhoneNumberClick}\n                            onBlur={handlePhoneNumberBlur}\n                        />\n                    </div>\n                </label>\n            </div>\n\n            {isPhoneNumberEmpty && isImagePreloaded ? (\n                <div class='long-error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">Please enter a phone number</p>\n                </div>\n            ) : isIncorrectFormat && isImagePreloaded ? (\n                <div class='error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">This phone number format is not recognized. Please check the country and number.</p>\n                </div>\n            ) : isAlreadyRegistered && isImagePreloaded (\n                <div class='error-div' id='error-div-space'>\n                    <img className='error-image' src={errorImage} alt='Error Image' />\n                    <p class=\"input-error-message\">This phone number has been used too many times</p>\n                </div>\n            )}\n\n            <div class='below-input-add-phone-number'>\n                <p class='small-grey'>Google will use this number only for account security. Your number won’t be visible to others. You can choose later whether to use it for other purposes.</p>\n            </div>\n\n            <div class='next-and-skip-button-duo'>\n                <button class=\"button-space-add-phone-number white-button\" type=\"submit\" onClick={handleNextClick}>\n                        Next   \n                </button>\n                <button class=\"button-space-add-phone-number white-button\" type=\"button\" onClick={handleSkip}>\n                        Skip   \n                </button>\n            </div>\n\n        </form>\n    );\n}","C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\BirthdayAndGenderComponent.js",["195","196","197","198","199"],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\hooks\\useImagePreload.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\images\\flags\\importSVGs.js",[],[],"C:\\Users\\Jake Matthews\\OneDrive\\Desktop\\Jake's Things\\ZK Front-End Projects\\Gmail Login\\src\\components\\CustomNextButton.js",[],[],{"ruleId":"200","severity":1,"message":"201","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"204","line":49,"column":9,"nodeType":"202","messageId":"203","endLine":49,"endColumn":16},{"ruleId":"200","severity":1,"message":"205","line":20,"column":12,"nodeType":"202","messageId":"203","endLine":20,"endColumn":24},{"ruleId":"200","severity":1,"message":"206","line":18,"column":12,"nodeType":"202","messageId":"203","endLine":18,"endColumn":26},{"ruleId":"200","severity":1,"message":"207","line":20,"column":12,"nodeType":"202","messageId":"203","endLine":20,"endColumn":18},{"ruleId":"200","severity":1,"message":"208","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"209","severity":1,"message":"210","line":87,"column":21,"nodeType":"211","endLine":87,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":92,"column":21,"nodeType":"211","endLine":92,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":43,"column":21,"nodeType":"211","endLine":43,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":63,"column":21,"nodeType":"211","endLine":63,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":79,"column":21,"nodeType":"211","endLine":79,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":84,"column":21,"nodeType":"211","endLine":84,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":89,"column":21,"nodeType":"211","endLine":89,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":44,"column":21,"nodeType":"211","endLine":44,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":49,"column":21,"nodeType":"211","endLine":49,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":54,"column":21,"nodeType":"211","endLine":54,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":59,"column":21,"nodeType":"211","endLine":59,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":66,"column":21,"nodeType":"211","endLine":66,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":73,"column":21,"nodeType":"211","endLine":73,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":41,"column":21,"nodeType":"211","endLine":41,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":48,"column":21,"nodeType":"211","endLine":48,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":55,"column":21,"nodeType":"211","endLine":55,"endColumn":87},{"ruleId":"200","severity":1,"message":"212","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":87,"column":21,"nodeType":"211","endLine":87,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":92,"column":21,"nodeType":"211","endLine":92,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":97,"column":21,"nodeType":"211","endLine":97,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":182,"column":25,"nodeType":"211","endLine":182,"endColumn":91},{"ruleId":"209","severity":1,"message":"210","line":187,"column":25,"nodeType":"211","endLine":187,"endColumn":91},{"ruleId":"209","severity":1,"message":"210","line":243,"column":25,"nodeType":"211","endLine":243,"endColumn":91},{"ruleId":"209","severity":1,"message":"210","line":294,"column":33,"nodeType":"211","endLine":294,"endColumn":99},{"ruleId":"209","severity":1,"message":"210","line":346,"column":33,"nodeType":"211","endLine":346,"endColumn":99},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'addUser' is assigned a value but never used.","'usersCountry' is assigned a value but never used.","'errorCondition' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'axios' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'dropDownImageSVG' is defined but never used."]