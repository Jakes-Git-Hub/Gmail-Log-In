{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\containers\\\\CreatePasswordContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { CreatePasswordComponent } from \"../components/CreatePasswordComponent\";\nimport useImagePreload from \"../hooks/useImagePreload\";\nimport errorImage from '../images/Daco_5575399.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreatePasswordContainer = _ref => {\n  _s();\n  let {\n    updateUser\n  } = _ref;\n  const [recoveryEmail, setRecoveryEmail] = useState(\"\");\n  const [recoveryEmailPlaceholder, setrecoveryEmailPlaceholder] = useState(\"Password\");\n  const [confirmPlaceholder, setConfirmPlaceholder] = useState(\"Confirm\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [errorCondition, setErrorCondition] = useState(null);\n  const navigate = useNavigate();\n  const isImagePreloaded = useImagePreload(errorImage);\n\n  // Password\n\n  const handlePasswordClick = () => {\n    setPasswordPlaceholder(\"\");\n  };\n  const handlePasswordBlur = () => {\n    if (password === \"\") {\n      setPasswordPlaceholder(\"Password\");\n    }\n  };\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  // Confirm\n\n  const handleConfirmClick = () => {\n    setConfirmPlaceholder(\"\");\n  };\n  const handleConfirmBlur = () => {\n    if (confirmPassword === \"\") {\n      setConfirmPlaceholder(\"Confirm\");\n    }\n  };\n\n  // Error messages\n\n  const confirmYourPassword = () => {\n    if (password !== '' && confirmPassword === \"\") {\n      setErrorCondition(\"confirmPasswordEmpty\");\n    } else {\n      setErrorCondition(null);\n    }\n  };\n  const passwordMismatch = () => {\n    if (password !== confirmPassword && confirmPassword !== '') {\n      setErrorCondition(\"passwordMismatch\");\n    } else {\n      setErrorCondition(null);\n    }\n  };\n  const bothPasswordAndConfirmEmpty = () => {\n    if (password === '' && confirmPassword === '') {\n      setErrorCondition(\"passwordAndConfirmEmpty\");\n    } else {\n      setErrorCondition(null);\n    }\n  };\n\n  // Handle Next\n\n  const handleNextClick = () => {\n    if (password === confirmPassword && password !== '' && confirmPassword !== '') {\n      updateUser({\n        password: password\n      });\n      setPassword('');\n      setConfirmPassword('');\n      setErrorCondition(null);\n      navigate('/add-recovery-email');\n    } else if (password === '' && confirmPassword === '') {\n      bothPasswordAndConfirmEmpty();\n      const passwordInput = document.getElementById('passwordInput');\n      if (passwordInput) {\n        passwordInput.focus();\n      }\n    } else if (password !== '' && confirmPassword === \"\") {\n      confirmYourPassword();\n      const confirmPasswordInput = document.getElementById('confirmPasswordInput');\n      if (confirmPasswordInput) {\n        confirmPasswordInput.focus();\n      }\n    } else if (password !== confirmPassword && password !== \"\" && confirmPassword !== '') {\n      passwordMismatch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CreatePasswordComponent, {\n      password: password,\n      setPassword: setPassword,\n      confirmPassword: confirmPassword,\n      setConfirmPassword: setConfirmPassword,\n      passwordPlaceholder: passwordPlaceholder,\n      handlePasswordClick: handlePasswordClick,\n      handlePasswordBlur: handlePasswordBlur,\n      confirmPlaceholder: confirmPlaceholder,\n      handleConfirmClick: handleConfirmClick,\n      handleConfirmBlur: handleConfirmBlur,\n      handleNextClick: handleNextClick,\n      showPassword: showPassword,\n      setShowPassword: setShowPassword,\n      togglePassword: handleTogglePassword,\n      confirmYourPassword: confirmYourPassword,\n      passwordMismatch: passwordMismatch,\n      isImagePreloaded: isImagePreloaded,\n      errorCondition: errorCondition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CreatePasswordContainer, \"1QBRFRPw0M3+K2ZLWFgijILD5Nc=\", false, function () {\n  return [useNavigate, useImagePreload];\n});\n_c = CreatePasswordContainer;\nvar _c;\n$RefreshReg$(_c, \"CreatePasswordContainer\");","map":{"version":3,"names":["React","useState","useNavigate","CreatePasswordComponent","useImagePreload","errorImage","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePasswordContainer","_ref","_s","updateUser","recoveryEmail","setRecoveryEmail","recoveryEmailPlaceholder","setrecoveryEmailPlaceholder","confirmPlaceholder","setConfirmPlaceholder","showPassword","setShowPassword","errorCondition","setErrorCondition","navigate","isImagePreloaded","handlePasswordClick","setPasswordPlaceholder","handlePasswordBlur","password","handleTogglePassword","handleConfirmClick","handleConfirmBlur","confirmPassword","confirmYourPassword","passwordMismatch","bothPasswordAndConfirmEmpty","handleNextClick","setPassword","setConfirmPassword","passwordInput","document","getElementById","focus","confirmPasswordInput","children","passwordPlaceholder","togglePassword","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/containers/CreatePasswordContainer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CreatePasswordComponent } from \"../components/CreatePasswordComponent\";\r\nimport useImagePreload from \"../hooks/useImagePreload\";\r\nimport errorImage from '../images/Daco_5575399.png';\r\n\r\nexport const CreatePasswordContainer = ({ updateUser }) => {\r\n\r\n    const [recoveryEmail, setRecoveryEmail] = useState(\"\");\r\n    const [recoveryEmailPlaceholder, setrecoveryEmailPlaceholder] = useState(\"Password\");\r\n    const [confirmPlaceholder, setConfirmPlaceholder] = useState(\"Confirm\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [errorCondition, setErrorCondition] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const isImagePreloaded = useImagePreload(errorImage);\r\n    \r\n// Password\r\n\r\n    const handlePasswordClick = () => {\r\n        setPasswordPlaceholder(\"\");\r\n    };\r\n\r\n    const handlePasswordBlur = () => {\r\n        if (password === \"\") {\r\n            setPasswordPlaceholder(\"Password\");\r\n        }\r\n    };\r\n\r\n    const handleTogglePassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n// Confirm\r\n\r\n    const handleConfirmClick = () => {\r\n        setConfirmPlaceholder(\"\");\r\n    };\r\n\r\n    const handleConfirmBlur = () => {\r\n        if (confirmPassword === \"\") {\r\n          setConfirmPlaceholder(\"Confirm\");\r\n        }\r\n    };\r\n\r\n// Error messages\r\n\r\n    const confirmYourPassword = () => {\r\n        if (password !== '' && confirmPassword === \"\") {\r\n        setErrorCondition(\"confirmPasswordEmpty\");\r\n        } else {\r\n        setErrorCondition(null);\r\n        }\r\n    };\r\n    \r\n    const passwordMismatch = () => {\r\n        if (password !== confirmPassword && confirmPassword !== '') {\r\n        setErrorCondition(\"passwordMismatch\");\r\n        } else {\r\n        setErrorCondition(null);\r\n        }\r\n    };\r\n    \r\n    const bothPasswordAndConfirmEmpty = () => {\r\n        if (password === '' && confirmPassword === '') {\r\n        setErrorCondition(\"passwordAndConfirmEmpty\");\r\n        } else {\r\n        setErrorCondition(null);\r\n        }\r\n    };\r\n\r\n\r\n\r\n// Handle Next\r\n\r\n    const handleNextClick = () => {\r\n        if (password === confirmPassword && password !== '' && confirmPassword !== '') {\r\n        updateUser({ password: password });\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setErrorCondition(null);\r\n        navigate('/add-recovery-email');\r\n        } else if (password === '' && confirmPassword === '') {\r\n            bothPasswordAndConfirmEmpty();\r\n            const passwordInput = document.getElementById('passwordInput');\r\n            if (passwordInput) {\r\n                passwordInput.focus();\r\n            }\r\n        } else if (password !== '' && confirmPassword === \"\") {\r\n            confirmYourPassword();\r\n            const confirmPasswordInput = document.getElementById('confirmPasswordInput');\r\n            if (confirmPasswordInput) {\r\n                confirmPasswordInput.focus();\r\n            }\r\n        } else if (password !== confirmPassword && password !== \"\" && confirmPassword !== '') {\r\n            passwordMismatch();\r\n        }\r\n    };\r\n\r\n return(\r\n    <>\r\n        <CreatePasswordComponent\r\n            password={password}\r\n            setPassword={setPassword}\r\n            confirmPassword={confirmPassword}\r\n            setConfirmPassword={setConfirmPassword}\r\n            passwordPlaceholder={passwordPlaceholder}\r\n            handlePasswordClick={handlePasswordClick}\r\n            handlePasswordBlur={handlePasswordBlur}\r\n            confirmPlaceholder={confirmPlaceholder}\r\n            handleConfirmClick={handleConfirmClick}\r\n            handleConfirmBlur={handleConfirmBlur}\r\n            handleNextClick={handleNextClick}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n            togglePassword={handleTogglePassword}\r\n            confirmYourPassword={confirmYourPassword}\r\n            passwordMismatch={passwordMismatch}\r\n            isImagePreloaded={isImagePreloaded}\r\n            errorCondition={errorCondition}\r\n        />\r\n    </>\r\n );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}