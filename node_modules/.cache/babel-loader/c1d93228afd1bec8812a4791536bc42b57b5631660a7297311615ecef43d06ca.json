{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake Matthews\\\\Desktop\\\\Jake's Things\\\\ZK Front-End Projects\\\\Gmail Log In\\\\src\\\\containers\\\\SignInFrontPageContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { SignInFrontPageComponent } from '../components/SignInFrontPageComponent';\nimport useImagePreload from \"../hooks/useImagePreload\";\nimport errorImage from '../images/Daco_5575399.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SignInFrontPageContainer = _ref => {\n  _s();\n  let {\n    users,\n    handleLogin\n  } = _ref;\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailPlaceholder, setEmailPlaceholder] = useState(\"Email...\");\n  const [passwordPlaceholder, setPasswordPlaceholder] = useState(\"Password...\");\n  const [emailIsEmpty, setEmailIsEmpty] = useState(false);\n  const [passwordIsEmpty, setPasswordIsEmpty] = useState(false);\n  const isImagePreloaded = useImagePreload(errorImage);\n\n  // Email\n\n  const handleEmailClick = () => {\n    setEmailPlaceholder(\"\");\n  };\n  const handleEmailBlur = () => {\n    if (email === \"\") {\n      setEmailPlaceholder(\"Email...\");\n    }\n  };\n  const emailEmptyError = () => setEmailIsEmpty(true);\n\n  // Password\n\n  const handlePasswordClick = () => {\n    setPasswordPlaceholder(\"\");\n  };\n  const handlePasswordBlur = () => {\n    if (password === \"\") {\n      setPasswordPlaceholder(\"Password...\");\n    }\n  };\n  const passwordEmptyError = () => setPasswordIsEmpty(true);\n\n  // Create Account Button\n\n  const handleCreateAccountClick = () => {\n    navigate('/create-account');\n  };\n\n  // Handle Submit\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email === '') {\n      emailEmptyError();\n      const emailInput = document.getElementById('emailInput');\n      emailInput.focus();\n    } else if (password === '') {\n      passwordEmptyError();\n      const passwordInput = document.getElementById('passwordInput');\n      passwordInput.focus();\n    } else if (email !== '' && password !== '') {\n      handleLogin(email, password);\n      const correctLoginCredentials = users.find(user => user.email === email && user.password === password);\n      if (correctLoginCredentials) {\n        navigate('/mockmail'); // Use Navigate.push to navigate\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SignInFrontPageComponent, {\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      handleSubmit: handleSubmit,\n      handlePasswordClick: handlePasswordClick,\n      handleEmailClick: handleEmailClick,\n      emailPlaceholder: emailPlaceholder,\n      passwordPlaceholder: passwordPlaceholder,\n      handleEmailBlur: handleEmailBlur,\n      handlePasswordBlur: handlePasswordBlur,\n      handleCreateAccountClick: handleCreateAccountClick,\n      emailIsEmpty: emailIsEmpty,\n      passwordIsEmpty: passwordIsEmpty,\n      isImagePreloaded: isImagePreloaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SignInFrontPageContainer, \"YicHZnjrUaPkqGHsIDCXJiWxZ94=\", false, function () {\n  return [useNavigate, useImagePreload];\n});\n_c = SignInFrontPageContainer;\nvar _c;\n$RefreshReg$(_c, \"SignInFrontPageContainer\");","map":{"version":3,"names":["React","useState","useNavigate","SignInFrontPageComponent","useImagePreload","errorImage","jsxDEV","_jsxDEV","Fragment","_Fragment","SignInFrontPageContainer","_ref","_s","users","handleLogin","navigate","email","setEmail","password","setPassword","emailPlaceholder","setEmailPlaceholder","passwordPlaceholder","setPasswordPlaceholder","emailIsEmpty","setEmailIsEmpty","passwordIsEmpty","setPasswordIsEmpty","isImagePreloaded","handleEmailClick","handleEmailBlur","emailEmptyError","handlePasswordClick","handlePasswordBlur","passwordEmptyError","handleCreateAccountClick","handleSubmit","e","preventDefault","emailInput","document","getElementById","focus","passwordInput","correctLoginCredentials","find","user","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jake Matthews/Desktop/Jake's Things/ZK Front-End Projects/Gmail Log In/src/containers/SignInFrontPageContainer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { SignInFrontPageComponent } from '../components/SignInFrontPageComponent';\r\nimport useImagePreload from \"../hooks/useImagePreload\";\r\nimport errorImage from '../images/Daco_5575399.png';\r\n\r\nexport const SignInFrontPageContainer = ({ users, handleLogin }) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailPlaceholder, setEmailPlaceholder] = useState(\"Email...\");\r\n    const [passwordPlaceholder, setPasswordPlaceholder] = useState(\"Password...\");\r\n    const [emailIsEmpty, setEmailIsEmpty] = useState(false);\r\n    const [passwordIsEmpty, setPasswordIsEmpty] = useState(false);\r\n\r\n    const isImagePreloaded = useImagePreload(errorImage);\r\n\r\n\r\n\r\n// Email\r\n\r\n    const handleEmailClick = () => {\r\n        setEmailPlaceholder(\"\");\r\n    };\r\n    \r\n    const handleEmailBlur = () => {\r\n        if (email === \"\") {\r\n            setEmailPlaceholder(\"Email...\");\r\n        }\r\n    };\r\n\r\n    const emailEmptyError = () => setEmailIsEmpty(true);\r\n\r\n// Password\r\n\r\n    const handlePasswordClick = () => {\r\n        setPasswordPlaceholder(\"\");\r\n    };\r\n\r\n    \r\n    const handlePasswordBlur = () => {\r\n        if (password === \"\") {\r\n            setPasswordPlaceholder(\"Password...\");\r\n        }\r\n    };\r\n\r\n    const passwordEmptyError = () => setPasswordIsEmpty(true);\r\n\r\n// Create Account Button\r\n\r\n    const handleCreateAccountClick = () => {\r\n        navigate('/create-account');\r\n    };\r\n\r\n// Handle Submit\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (email === '') {\r\n            emailEmptyError();\r\n            const emailInput = document.getElementById('emailInput');\r\n            emailInput.focus();\r\n        } else if (password === '') {\r\n            passwordEmptyError();\r\n            const passwordInput = document.getElementById('passwordInput');\r\n            passwordInput.focus();\r\n        } else if (email !== '' && password !== '') {\r\n            handleLogin(email, password);\r\n            const correctLoginCredentials = users.find(\r\n                (user) => user.email === email && user.password === password\r\n            );\r\n            if (correctLoginCredentials) {\r\n                navigate('/mockmail'); // Use Navigate.push to navigate\r\n            }\r\n        }\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <SignInFrontPageComponent\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                setPassword={setPassword}\r\n                handleSubmit={handleSubmit}\r\n                handlePasswordClick={handlePasswordClick}\r\n                handleEmailClick={handleEmailClick}\r\n                emailPlaceholder={emailPlaceholder}\r\n                passwordPlaceholder={passwordPlaceholder}\r\n                handleEmailBlur={handleEmailBlur}\r\n                handlePasswordBlur={handlePasswordBlur}\r\n                handleCreateAccountClick={handleCreateAccountClick}\r\n                emailIsEmpty={emailIsEmpty}\r\n                passwordIsEmpty={passwordIsEmpty}\r\n                isImagePreloaded={isImagePreloaded}\r\n            />\r\n        </>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}