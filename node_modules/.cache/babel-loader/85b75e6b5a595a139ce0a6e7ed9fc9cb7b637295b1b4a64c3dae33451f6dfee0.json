{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { StaticElementContainer } from \"./containers/StaticElementContainer\";\nimport { LoginFormContainer } from \"./containers/LoginFormContainer\";\nimport { MockMailContainer } from \"./containers/MockMailContainer\";\nimport { CreateAccountContainer } from \"./containers/CreateAccountContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentLoggedInUser, setCurrentLoggedInUser] = useState(null);\n  const handleLogin = (username, password) => {\n    const correctLoginCredentials = users.find(user => user.username === username && user.password === password);\n    if (correctLoginCredentials) {\n      setLoggedIn(true);\n      setCurrentLoggedInUser(correctLoginCredentials.username);\n    }\n  };\n  const addUser = (username, password, email, phone) => {\n    const newUser = {\n      id: users.length + 1,\n      username: username,\n      password: password,\n      email: email,\n      phone: phone\n    };\n    setUsers([...users, newUser]);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(StaticElementContainer, {\n          children: /*#__PURE__*/_jsxDEV(LoginFormContainer, {\n            users: users,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mockmail\",\n        element: /*#__PURE__*/_jsxDEV(MockMailContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-account\",\n        element: /*#__PURE__*/_jsxDEV(StaticElementContainer, {\n          children: /*#__PURE__*/_jsxDEV(CreateAccountContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BitO6/heW3UuM+XxNKMBG8aug9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","StaticElementContainer","LoginFormContainer","MockMailContainer","CreateAccountContainer","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","users","setUsers","currentLoggedInUser","setCurrentLoggedInUser","handleLogin","username","password","correctLoginCredentials","find","user","addUser","email","phone","newUser","id","length","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { StaticElementContainer } from \"./containers/StaticElementContainer\";\nimport { LoginFormContainer } from \"./containers/LoginFormContainer\";\nimport { MockMailContainer } from \"./containers/MockMailContainer\";\nimport { CreateAccountContainer } from \"./containers/CreateAccountContainer\";\n\nfunction App() {\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentLoggedInUser, setCurrentLoggedInUser] = useState(null);\n\n  const handleLogin = (username, password) => {\n    const correctLoginCredentials = users.find(\n      (user) => user.username === username && user.password === password\n    );\n\n    if(correctLoginCredentials) {\n      setLoggedIn(true);\n      setCurrentLoggedInUser(correctLoginCredentials.username);\n    }\n  }\n\n  const addUser = (username, password, email, phone) => {\n    const newUser = {\n      id: users.length + 1,\n      username: username,\n      password: password,\n      email: email,\n      phone: phone\n    };\n    setUsers([...users, newUser])\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n          <StaticElementContainer>\n            <LoginFormContainer \n              users={users}\n              handleLogin={handleLogin}\n            />\n          </StaticElementContainer>\n        } />\n        <Route \n          path=\"/mockmail\" \n          element={<MockMailContainer \n                   />} \n        />\n        <Route path=\"/create-account\" element={\n          <StaticElementContainer>\n            <CreateAccountContainer />\n          </StaticElementContainer>\n        } />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}