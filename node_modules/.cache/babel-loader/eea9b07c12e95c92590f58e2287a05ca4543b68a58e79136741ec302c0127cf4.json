{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\containers\\\\LoginFormContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LoginForm } from '../components/LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LoginFormContainer = _ref => {\n  _s();\n  let {\n    users,\n    handleLogin\n  } = _ref;\n  const navigate = useNavigate();\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailAddressPlaceholder, setEmailAddressPlaceholder] = useState(\"Email Address...\");\n  const [passwordPlaceholder, setPasswordPlaceholder] = useState(\"Password...\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleLogin(emailAddress, password);\n    const correctLoginCredentials = users.find(user => user.emailAddress === emailAddress && user.password === password);\n    if (correctLoginCredentials) {\n      navigate('/mockmail'); // Use Navigate.push to navigate\n    }\n  };\n\n  const handleemailAddressClick = () => {\n    setEmailAddressPlaceholder(\"\");\n  };\n  const handlePasswordClick = () => {\n    setPasswordPlaceholder(\"\");\n  };\n  const handleemailAddressBlur = () => {\n    if (emailAddress === \"\") {\n      setEmailAddressPlaceholder(\"emailAddress...\");\n    }\n  };\n  const handlePasswordBlur = () => {\n    if (password === \"\") {\n      setPasswordPlaceholder(\"Password...\");\n    }\n  };\n  const handleCreateAccountClick = () => {\n    navigate('/create-account');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      emailAddress: emailAddress,\n      setEmailAddress: setEmailAddress,\n      password: password,\n      setPassword: setPassword,\n      handleSubmit: handleSubmit,\n      handlePasswordClick: handlePasswordClick,\n      handleemailAddressClick: handleemailAddressClick,\n      emailAddressPlaceholder: emailAddressPlaceholder,\n      passwordPlaceholder: passwordPlaceholder,\n      handleemailAddressBlur: handleemailAddressBlur,\n      handlePasswordBlur: handlePasswordBlur,\n      handleCreateAccountClick: handleCreateAccountClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(LoginFormContainer, \"TmAjl5pipGBEOOgpp0DuO4ugn1Q=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginFormContainer;\nvar _c;\n$RefreshReg$(_c, \"LoginFormContainer\");","map":{"version":3,"names":["React","useState","useNavigate","LoginForm","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginFormContainer","_ref","_s","users","handleLogin","navigate","emailAddress","setEmailAddress","password","setPassword","emailAddressPlaceholder","setEmailAddressPlaceholder","passwordPlaceholder","setPasswordPlaceholder","handleSubmit","e","preventDefault","correctLoginCredentials","find","user","handleemailAddressClick","handlePasswordClick","handleemailAddressBlur","handlePasswordBlur","handleCreateAccountClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/containers/LoginFormContainer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LoginForm } from '../components/LoginForm';\r\n\r\nexport const LoginFormContainer = ({ users, handleLogin }) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [emailAddress, setEmailAddress] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailAddressPlaceholder, setEmailAddressPlaceholder] = useState(\"Email Address...\");\r\n    const [passwordPlaceholder, setPasswordPlaceholder] = useState(\"Password...\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleLogin(emailAddress, password);\r\n        const correctLoginCredentials = users.find(\r\n            (user) => user.emailAddress === emailAddress && user.password === password\r\n        );\r\n        if (correctLoginCredentials) {\r\n            navigate('/mockmail'); // Use Navigate.push to navigate\r\n        }\r\n    };\r\n\r\n    const handleemailAddressClick = () => {\r\n        setEmailAddressPlaceholder(\"\");\r\n    };\r\n\r\n    const handlePasswordClick = () => {\r\n        setPasswordPlaceholder(\"\");\r\n    };\r\n\r\n    const handleemailAddressBlur = () => {\r\n        if (emailAddress === \"\") {\r\n            setEmailAddressPlaceholder(\"emailAddress...\");\r\n        }\r\n    };\r\n\r\n    const handlePasswordBlur = () => {\r\n        if (password === \"\") {\r\n            setPasswordPlaceholder(\"Password...\");\r\n        }\r\n    };\r\n\r\n    const handleCreateAccountClick = () => {\r\n        navigate('/create-account');\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <LoginForm\r\n                emailAddress={emailAddress}\r\n                setEmailAddress={setEmailAddress}\r\n                password={password}\r\n                setPassword={setPassword}\r\n                handleSubmit={handleSubmit}\r\n                handlePasswordClick={handlePasswordClick}\r\n                handleemailAddressClick={handleemailAddressClick}\r\n                emailAddressPlaceholder={emailAddressPlaceholder}\r\n                passwordPlaceholder={passwordPlaceholder}\r\n                handleemailAddressBlur={handleemailAddressBlur}\r\n                handlePasswordBlur={handlePasswordBlur}\r\n                handleCreateAccountClick={handleCreateAccountClick}\r\n            />\r\n        </>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,OAAO,MAAMC,kBAAkB,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAAH,IAAA;EAErD,MAAMI,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGlB,QAAQ,CAAC,kBAAkB,CAAC;EAC1F,MAAM,CAACmB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpB,QAAQ,CAAC,aAAa,CAAC;EAE7E,MAAMqB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBZ,WAAW,CAACE,YAAY,EAAEE,QAAQ,CAAC;IACnC,MAAMS,uBAAuB,GAAGd,KAAK,CAACe,IAAI,CACrCC,IAAI,IAAKA,IAAI,CAACb,YAAY,KAAKA,YAAY,IAAIa,IAAI,CAACX,QAAQ,KAAKA,QACtE,CAAC;IACD,IAAIS,uBAAuB,EAAE;MACzBZ,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3B;EACJ,CAAC;;EAED,MAAMe,uBAAuB,GAAGA,CAAA,KAAM;IAClCT,0BAA0B,CAAC,EAAE,CAAC;EAClC,CAAC;EAED,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;IAC9BR,sBAAsB,CAAC,EAAE,CAAC;EAC9B,CAAC;EAED,MAAMS,sBAAsB,GAAGA,CAAA,KAAM;IACjC,IAAIhB,YAAY,KAAK,EAAE,EAAE;MACrBK,0BAA0B,CAAC,iBAAiB,CAAC;IACjD;EACJ,CAAC;EAED,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIf,QAAQ,KAAK,EAAE,EAAE;MACjBK,sBAAsB,CAAC,aAAa,CAAC;IACzC;EACJ,CAAC;EAED,MAAMW,wBAAwB,GAAGA,CAAA,KAAM;IACnCnB,QAAQ,CAAC,iBAAiB,CAAC;EAC/B,CAAC;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACI5B,OAAA,CAACF,SAAS;MACNW,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA,eAAgB;MACjCC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBK,YAAY,EAAEA,YAAa;MAC3BO,mBAAmB,EAAEA,mBAAoB;MACzCD,uBAAuB,EAAEA,uBAAwB;MACjDV,uBAAuB,EAAEA,uBAAwB;MACjDE,mBAAmB,EAAEA,mBAAoB;MACzCU,sBAAsB,EAAEA,sBAAuB;MAC/CC,kBAAkB,EAAEA,kBAAmB;MACvCC,wBAAwB,EAAEA;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD;EAAC,gBACJ,CAAC;AAEX,CAAC;AAAC3B,EAAA,CA9DWF,kBAAkB;EAAA,QAEVN,WAAW;AAAA;AAAAoC,EAAA,GAFnB9B,kBAAkB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}