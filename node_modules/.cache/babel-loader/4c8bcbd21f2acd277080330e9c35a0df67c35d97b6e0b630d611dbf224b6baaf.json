{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\containers\\\\AddPhoneNumberContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AddPhoneNumberComponent } from '../components/AddPhoneNumberComponent';\nimport useImagePreload from \"../hooks/useImagePreload\";\nimport errorImage from '../images/Daco_5575399.png';\nimport { countries } from '../utils/addPhoneNumberDropDownOptionsObject';\nimport { customOptions } from '../utils/addPhoneNumberDropDownOptionsObject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddPhoneNumberContainer = _ref => {\n  _s();\n  let {\n    updateUser,\n    users\n  } = _ref;\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [phoneNumberPlaceholder, setPhoneNumberPlaceholder] = useState(\"Phone Number\");\n  const [isPhoneNumberEmpty, setIsPhoneNumberEmpty] = useState(false);\n  const [isIncorrectFormat, setIsIncorrectFormat] = useState(false);\n  const [isAlreadyRegistered, setIsAlreadyRegistered] = useState(false);\n  const [errorCondition, setErrorCondition] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [userCountry, setUserCountry] = useState(null);\n  const navigate = useNavigate();\n  const isImagePreloaded = useImagePreload(errorImage);\n\n  // Sources Users IP and Country Location\n\n  const fetchUserCountry = async () => {\n    try {\n      // Make an API request to get the user's IP address\n      const ipResponse = await fetch('https://api.ipify.org?format=json');\n      const ipData = await ipResponse.json();\n      const userIP = ipData.ip;\n\n      // Make another API request to determine the user's country based on their IP\n      const locationResponse = await fetch(`https://ipinfo.io/${userIP}/json`);\n      const locationData = await locationResponse.json();\n      const country = locationData.country;\n      setUserCountry(country);\n    } catch (error) {\n      console.error('Error fetching user location:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUserCountry();\n  }, []);\n\n  // phoneNumber\n\n  const handlePhoneNumberClick = () => {\n    setPhoneNumberPlaceholder(\"\");\n  };\n  const handlePhoneNumberBlur = () => {\n    if (phoneNumber === \"\") {\n      setPhoneNumberPlaceholder(\"Phone Number\");\n    }\n  };\n\n  // Error Messages\n\n  const phoneNumberEmpty = () => setIsPhoneNumberEmpty(true);\n  const incorrectFormat = () => setIsIncorrectFormat(true);\n  const alreadyRegistered = () => setIsAlreadyRegistered(true);\n\n  // Handle Next Click\n\n  const handleNextClick = () => {\n    setIsPhoneNumberEmpty(false);\n    setIsIncorrectFormat(false);\n    setIsAlreadyRegistered(false);\n    if (phoneNumber === '') {\n      const phoneNumberInput = document.getElementById('phoneNumberInput');\n      phoneNumberEmpty();\n      phoneNumberInput.focus();\n    } else if (!/^[a-zA-Z0-9.]+$/.test(phoneNumber)) {\n      // Check if the phoneNumber contains unallowed characters\n      incorrectFormat();\n      console.log('correct regex');\n    } else {\n      const isPhoneNumberAlreadyRegistered = users.some(user => user.phoneNumber === phoneNumber);\n      if (isPhoneNumberAlreadyRegistered) {\n        alreadyRegistered();\n      } else {\n        updateUser({\n          phoneNumber: phoneNumber\n        });\n        setPhoneNumber('');\n        navigate('/next');\n      }\n    }\n  };\n\n  // Custom React Select Styles\n\n  const customStyles = {\n    menu: styles => ({\n      ...styles,\n      width: '360px'\n    })\n  };\n\n  // Handle Skip\n\n  const handleSkip = () => {\n    setPhoneNumber('');\n    setErrorCondition(null);\n    navigate('/review-your-account-info');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AddPhoneNumberComponent, {\n      value: phoneNumber,\n      setValue: setPhoneNumber,\n      handlePhoneNumberClick: handlePhoneNumberClick,\n      handlePhoneNumberBlur: handlePhoneNumberBlur,\n      phoneNumberPlaceholder: phoneNumberPlaceholder,\n      handleNextClick: handleNextClick,\n      handleSkip: handleSkip,\n      isPhoneNumberEmpty: isPhoneNumberEmpty,\n      isImagePreloaded: isImagePreloaded,\n      isIncorrectFormat: isIncorrectFormat,\n      isAlreadyRegistered: isAlreadyRegistered,\n      customOptions: customOptions,\n      countries: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(AddPhoneNumberContainer, \"zLCzsCoHdBcKx5iu6m8JPbxbMV8=\", false, function () {\n  return [useNavigate, useImagePreload];\n});\n_c = AddPhoneNumberContainer;\nvar _c;\n$RefreshReg$(_c, \"AddPhoneNumberContainer\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","AddPhoneNumberComponent","useImagePreload","errorImage","countries","customOptions","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPhoneNumberContainer","_ref","_s","updateUser","users","phoneNumber","setPhoneNumber","phoneNumberPlaceholder","setPhoneNumberPlaceholder","isPhoneNumberEmpty","setIsPhoneNumberEmpty","isIncorrectFormat","setIsIncorrectFormat","isAlreadyRegistered","setIsAlreadyRegistered","errorCondition","setErrorCondition","selectedCountry","setSelectedCountry","userCountry","setUserCountry","navigate","isImagePreloaded","fetchUserCountry","ipResponse","fetch","ipData","json","userIP","ip","locationResponse","locationData","country","error","console","handlePhoneNumberClick","handlePhoneNumberBlur","phoneNumberEmpty","incorrectFormat","alreadyRegistered","handleNextClick","phoneNumberInput","document","getElementById","focus","test","log","isPhoneNumberAlreadyRegistered","some","user","customStyles","menu","styles","width","handleSkip","children","value","setValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/containers/AddPhoneNumberContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AddPhoneNumberComponent } from '../components/AddPhoneNumberComponent';\r\nimport useImagePreload from \"../hooks/useImagePreload\";\r\nimport errorImage from '../images/Daco_5575399.png';\r\nimport { countries } from '../utils/addPhoneNumberDropDownOptionsObject';\r\nimport { customOptions } from '../utils/addPhoneNumberDropDownOptionsObject';\r\n\r\n\r\nexport const AddPhoneNumberContainer = ({ updateUser, users }) => {\r\n\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [phoneNumberPlaceholder, setPhoneNumberPlaceholder] = useState(\"Phone Number\");\r\n    const [isPhoneNumberEmpty, setIsPhoneNumberEmpty] = useState(false);\r\n    const [isIncorrectFormat, setIsIncorrectFormat] = useState(false);\r\n    const [isAlreadyRegistered, setIsAlreadyRegistered] = useState(false);\r\n    const [errorCondition, setErrorCondition] = useState(null);\r\n    const [selectedCountry, setSelectedCountry] = useState(null);\r\n    const [userCountry, setUserCountry] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const isImagePreloaded = useImagePreload(errorImage);\r\n\r\n\r\n// Sources Users IP and Country Location\r\n\r\nconst fetchUserCountry = async () => {\r\n    try {\r\n      // Make an API request to get the user's IP address\r\n      const ipResponse = await fetch('https://api.ipify.org?format=json');\r\n      const ipData = await ipResponse.json();\r\n      const userIP = ipData.ip;\r\n\r\n      // Make another API request to determine the user's country based on their IP\r\n      const locationResponse = await fetch(`https://ipinfo.io/${userIP}/json`);\r\n      const locationData = await locationResponse.json();\r\n      const country = locationData.country;\r\n\r\n      setUserCountry(country);\r\n    } catch (error) {\r\n      console.error('Error fetching user location:', error);\r\n    }\r\n};\r\n\r\n  useEffect(() => {\r\n    fetchUserCountry();\r\n  }, []);\r\n\r\n// phoneNumber\r\n\r\n    const handlePhoneNumberClick = () => {\r\n        setPhoneNumberPlaceholder(\"\");\r\n    };\r\n\r\n    const handlePhoneNumberBlur = () => {\r\n        if (phoneNumber === \"\") {\r\n            setPhoneNumberPlaceholder(\"Phone Number\");\r\n        }\r\n    };\r\n\r\n// Error Messages\r\n\r\n    const phoneNumberEmpty = () => setIsPhoneNumberEmpty(true);\r\n\r\n    const incorrectFormat = () => setIsIncorrectFormat(true);\r\n\r\n    const alreadyRegistered = () => setIsAlreadyRegistered(true);\r\n\r\n// Handle Next Click\r\n\r\n    const handleNextClick = () => {\r\n        setIsPhoneNumberEmpty(false);\r\n        setIsIncorrectFormat(false);\r\n        setIsAlreadyRegistered(false);\r\n        if (phoneNumber === '') {\r\n        const phoneNumberInput = document.getElementById('phoneNumberInput');\r\n        phoneNumberEmpty();\r\n        phoneNumberInput.focus();\r\n        } else if (!/^[a-zA-Z0-9.]+$/.test(phoneNumber)) {\r\n        // Check if the phoneNumber contains unallowed characters\r\n        incorrectFormat();\r\n        console.log('correct regex')\r\n        } else {\r\n                const isPhoneNumberAlreadyRegistered = users.some(user => user.phoneNumber === phoneNumber);\r\n                if(isPhoneNumberAlreadyRegistered) {\r\n                    alreadyRegistered();    \r\n                } else {\r\n            updateUser({ phoneNumber: phoneNumber })\r\n            setPhoneNumber('');\r\n            navigate('/next')\r\n            }\r\n        }\r\n    };\r\n\r\n// Custom React Select Styles\r\n\r\nconst customStyles = {\r\n    menu: (styles) => ({\r\n        ...styles,\r\n        width: '360px',                \r\n    }),\r\n};\r\n\r\n\r\n// Handle Skip\r\n\r\n    const handleSkip = () => {\r\n        setPhoneNumber('');\r\n        setErrorCondition(null);\r\n        navigate('/review-your-account-info');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AddPhoneNumberComponent\r\n                value={phoneNumber}\r\n                setValue={setPhoneNumber}\r\n                handlePhoneNumberClick={handlePhoneNumberClick}\r\n                handlePhoneNumberBlur={handlePhoneNumberBlur}\r\n                phoneNumberPlaceholder={phoneNumberPlaceholder}\r\n                handleNextClick={handleNextClick}\r\n                handleSkip={handleSkip}\r\n                isPhoneNumberEmpty={isPhoneNumberEmpty}\r\n                isImagePreloaded={isImagePreloaded}\r\n                isIncorrectFormat={isIncorrectFormat}\r\n                isAlreadyRegistered={isAlreadyRegistered}\r\n                customOptions={customOptions}\r\n                countries={countries}\r\n            />\r\n        </>\r\n    )\r\n    \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}