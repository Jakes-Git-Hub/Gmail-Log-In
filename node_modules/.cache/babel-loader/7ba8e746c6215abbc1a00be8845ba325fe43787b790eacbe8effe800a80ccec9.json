{"ast":null,"code":"// Define a function to import all SVG files in the directory\nconst importAll = requireContext => {\n  return requireContext.keys().reduce((acc, filePath) => {\n    const fileName = filePath.split('/').pop().replace(/\\.\\w+$/, ''); // Extract the file name\n    const component = requireContext(filePath).default; // Import the SVG file\n    acc[fileName] = component; // Add the SVG component to the export object\n    return acc;\n  }, {});\n};\nconst svgFiles = importAll(require.context('./', false, /\\.svg$/)); // Import all SVG files in the current directory\n\nexport default svgFiles;","map":{"version":3,"names":["importAll","requireContext","keys","reduce","acc","filePath","fileName","split","pop","replace","component","default","svgFiles","require","context"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/images/flags/index.js"],"sourcesContent":["// Define a function to import all SVG files in the directory\r\nconst importAll = (requireContext) => {\r\n    return requireContext.keys().reduce((acc, filePath) => {\r\n      const fileName = filePath.split('/').pop().replace(/\\.\\w+$/, ''); // Extract the file name\r\n      const component = requireContext(filePath).default; // Import the SVG file\r\n      acc[fileName] = component; // Add the SVG component to the export object\r\n      return acc;\r\n    }, {});\r\n  };\r\n  \r\n  const svgFiles = importAll(require.context('./', false, /\\.svg$/)); // Import all SVG files in the current directory\r\n  \r\n  export default svgFiles;\r\n  "],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAIC,cAAc,IAAK;EAClC,OAAOA,cAAc,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;IACrD,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;IAClE,MAAMC,SAAS,GAAGT,cAAc,CAACI,QAAQ,CAAC,CAACM,OAAO,CAAC,CAAC;IACpDP,GAAG,CAACE,QAAQ,CAAC,GAAGI,SAAS,CAAC,CAAC;IAC3B,OAAON,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;AAED,MAAMQ,QAAQ,GAAGZ,SAAS,CAACa,OAAO,CAACC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;;AAEpE,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}