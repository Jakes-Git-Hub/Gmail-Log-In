{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\containers\\\\ChooseYourGmailAddressContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChooseYourGmailAddressComponent } from '../components/ChooseYourGmailAddressComponent';\nimport useImagePreload from \"../hooks/useImagePreload\";\nimport errorImage from '../images/Daco_5575399.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChooseYourGmailAddressContainer = _ref => {\n  _s();\n  let {\n    updateUser,\n    users\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [emailPlaceholder, setEmailPlaceholder] = useState(\"Username\");\n  const [isUsernameEmpty, setIsUsernameEmpty] = useState(false);\n  const [isIncorrectLength, setIsIncorrectLength] = useState(false);\n  const navigate = useNavigate();\n  const isImagePreloaded = useImagePreload(errorImage);\n\n  // Email\n\n  const handleEmailClick = () => {\n    setEmailPlaceholder(\"\");\n  };\n  const handleEmailBlur = () => {\n    if (email === \"\") {\n      setEmailPlaceholder(\"Username\");\n    }\n  };\n\n  // Empty Error\n\n  const usernameEmpty = () => setIsUsernameEmpty(true);\n\n  // Incorrect Length\n\n  const incorrectLength = () => setIsIncorrectLength(true);\n\n  // Handle Next Click\n\n  const handleNextClick = () => {\n    if (email === '') {\n      const usernameInput = document.getElementById('usernameInput');\n      usernameEmpty();\n      usernameInput.focus();\n    }\n    if (email.length < 6 || email.length > 30) {\n      incorrectLength();\n    }\n    if (email.length >= 6 && email.length <= 30) {\n      updateUser({\n        email: email\n      });\n      setEmail('');\n      navigate('/create-password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChooseYourGmailAddressComponent, {\n      email: email,\n      setEmail: setEmail,\n      handleEmailClick: handleEmailClick,\n      handleEmailBlur: handleEmailBlur,\n      emailPlaceholder: emailPlaceholder,\n      handleNextClick: handleNextClick,\n      isUsernameEmpty: isUsernameEmpty,\n      isImagePreloaded: isImagePreloaded,\n      isIncorrectLength: isIncorrectLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ChooseYourGmailAddressContainer, \"/nF1A43nIXrjlpHmVW/84ngBpGI=\", false, function () {\n  return [useNavigate, useImagePreload];\n});\n_c = ChooseYourGmailAddressContainer;\nvar _c;\n$RefreshReg$(_c, \"ChooseYourGmailAddressContainer\");","map":{"version":3,"names":["React","useState","useNavigate","ChooseYourGmailAddressComponent","useImagePreload","errorImage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChooseYourGmailAddressContainer","_ref","_s","updateUser","users","email","setEmail","emailPlaceholder","setEmailPlaceholder","isUsernameEmpty","setIsUsernameEmpty","isIncorrectLength","setIsIncorrectLength","navigate","isImagePreloaded","handleEmailClick","handleEmailBlur","usernameEmpty","incorrectLength","handleNextClick","usernameInput","document","getElementById","focus","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/containers/ChooseYourGmailAddressContainer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ChooseYourGmailAddressComponent } from '../components/ChooseYourGmailAddressComponent';\r\nimport useImagePreload from \"../hooks/useImagePreload\";\r\nimport errorImage from '../images/Daco_5575399.png';\r\n\r\nexport const ChooseYourGmailAddressContainer = ({ updateUser, users }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [emailPlaceholder, setEmailPlaceholder] = useState(\"Username\");\r\n    const [isUsernameEmpty, setIsUsernameEmpty] = useState(false);\r\n    const [isIncorrectLength, setIsIncorrectLength] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const isImagePreloaded = useImagePreload(errorImage);\r\n\r\n// Email\r\n\r\n    const handleEmailClick = () => {\r\n        setEmailPlaceholder(\"\");\r\n    };\r\n\r\n    const handleEmailBlur = () => {\r\n        if (email === \"\") {\r\n            setEmailPlaceholder(\"Username\");\r\n        }\r\n    };\r\n\r\n// Empty Error\r\n\r\n    const usernameEmpty = () => setIsUsernameEmpty(true);\r\n\r\n\r\n// Incorrect Length\r\n\r\n    const incorrectLength = () => setIsIncorrectLength(true);\r\n\r\n\r\n// Handle Next Click\r\n\r\nconst handleNextClick = () => {\r\n\r\n    if (email === '') {\r\n        const usernameInput = document.getElementById('usernameInput');\r\n        usernameEmpty();\r\n        usernameInput.focus();\r\n    }\r\n\r\n    if (email.length < 6 || email.length > 30) {\r\n        incorrectLength();\r\n    }\r\n\r\n    if (email.length >= 6 && email.length <= 30) {\r\n        updateUser({ email: email })\r\n        setEmail('');\r\n        navigate('/create-password')\r\n    }\r\n};\r\n\r\n    return (\r\n        <>\r\n            <ChooseYourGmailAddressComponent\r\n                email={email}\r\n                setEmail={setEmail}\r\n                handleEmailClick={handleEmailClick}\r\n                handleEmailBlur={handleEmailBlur}\r\n                emailPlaceholder={emailPlaceholder}\r\n                handleNextClick={handleNextClick}\r\n                isUsernameEmpty={isUsernameEmpty}\r\n                isImagePreloaded={isImagePreloaded}\r\n                isIncorrectLength={isIncorrectLength}\r\n            />\r\n        </>\r\n    )\r\n    \r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,+BAA+B,QAAQ,+CAA+C;AAC/F,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,OAAO,MAAMC,+BAA+B,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,UAAU;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAEjE,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,UAAU,CAAC;EACpE,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMsB,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAE9B,MAAMsB,gBAAgB,GAAGpB,eAAe,CAACC,UAAU,CAAC;;EAExD;;EAEI,MAAMoB,gBAAgB,GAAGA,CAAA,KAAM;IAC3BP,mBAAmB,CAAC,EAAE,CAAC;EAC3B,CAAC;EAED,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAIX,KAAK,KAAK,EAAE,EAAE;MACdG,mBAAmB,CAAC,UAAU,CAAC;IACnC;EACJ,CAAC;;EAEL;;EAEI,MAAMS,aAAa,GAAGA,CAAA,KAAMP,kBAAkB,CAAC,IAAI,CAAC;;EAGxD;;EAEI,MAAMQ,eAAe,GAAGA,CAAA,KAAMN,oBAAoB,CAAC,IAAI,CAAC;;EAG5D;;EAEA,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAE1B,IAAId,KAAK,KAAK,EAAE,EAAE;MACd,MAAMe,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;MAC9DL,aAAa,CAAC,CAAC;MACfG,aAAa,CAACG,KAAK,CAAC,CAAC;IACzB;IAEA,IAAIlB,KAAK,CAACmB,MAAM,GAAG,CAAC,IAAInB,KAAK,CAACmB,MAAM,GAAG,EAAE,EAAE;MACvCN,eAAe,CAAC,CAAC;IACrB;IAEA,IAAIb,KAAK,CAACmB,MAAM,IAAI,CAAC,IAAInB,KAAK,CAACmB,MAAM,IAAI,EAAE,EAAE;MACzCrB,UAAU,CAAC;QAAEE,KAAK,EAAEA;MAAM,CAAC,CAAC;MAC5BC,QAAQ,CAAC,EAAE,CAAC;MACZO,QAAQ,CAAC,kBAAkB,CAAC;IAChC;EACJ,CAAC;EAEG,oBACIhB,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACI5B,OAAA,CAACJ,+BAA+B;MAC5BY,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBS,gBAAgB,EAAEA,gBAAiB;MACnCC,eAAe,EAAEA,eAAgB;MACjCT,gBAAgB,EAAEA,gBAAiB;MACnCY,eAAe,EAAEA,eAAgB;MACjCV,eAAe,EAAEA,eAAgB;MACjCK,gBAAgB,EAAEA,gBAAiB;MACnCH,iBAAiB,EAAEA;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC,gBACJ,CAAC;AAGX,CAAC;AAAA3B,EAAA,CArEYF,+BAA+B;EAAA,QAMvBR,WAAW,EAEHE,eAAe;AAAA;AAAAoC,EAAA,GAR/B9B,+BAA+B;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}