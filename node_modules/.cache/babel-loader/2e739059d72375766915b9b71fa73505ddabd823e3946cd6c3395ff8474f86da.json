{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\containers\\\\StaticElementContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { StaticElementComponent } from \"../components/StaticElementComponent\";\nimport googleWritingSvg from \"../images/google-writing-svg.svg\";\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StaticElementContainer = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    const image = new Image();\n    image.src = googleWritingSvg;\n    image.onload = () => {\n      setIsImageLoaded(true);\n    };\n  }, []);\n  const LoaderContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 65vh;\n    position: relative;\n  `;\n  const snakeAnimation = keyframes`\n    0% {\n      transform: scaleX(0);\n    }\n    25% {\n      transform: scaleX(0.25);\n    }\n    50% {\n      transform: scaleX(0.75);\n    }\n    75% {\n      transform: scaleX(0.25);\n    }\n    100% {\n      transform: scaleX(0);\n    }\n  `;\n  const SnakeLoader = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 4px; /* Adjust the height of the loader bar */\n    width: 100%;\n    background-color: #2196F3; /* Blue color */\n    animation: snakeAnimation 3s linear infinite;\n  `;\n  const LoadingSpinner = () => {\n    return /*#__PURE__*/_jsxDEV(LoaderContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SnakeLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n  if (!isImageLoaded) {\n    // Render loading state or placeholder if the image is not loaded yet\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the StaticElementComponent with the children once the image is loaded\n  return /*#__PURE__*/_jsxDEV(StaticElementComponent, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(StaticElementContainer, \"MbQMQ7ElFLxze9+2HCrB+pVASV4=\");\n_c = StaticElementContainer;\nvar _c;\n$RefreshReg$(_c, \"StaticElementContainer\");","map":{"version":3,"names":["React","useState","useEffect","StaticElementComponent","googleWritingSvg","styled","keyframes","jsxDEV","_jsxDEV","StaticElementContainer","_ref","_s","children","isImageLoaded","setIsImageLoaded","image","Image","src","onload","LoaderContainer","div","snakeAnimation","SnakeLoader","LoadingSpinner","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/containers/StaticElementContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StaticElementComponent } from \"../components/StaticElementComponent\";\r\nimport googleWritingSvg from \"../images/google-writing-svg.svg\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nexport const StaticElementContainer = ({ children }) => {\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const image = new Image();\r\n    image.src = googleWritingSvg;\r\n    image.onload = () => {\r\n      setIsImageLoaded(true);\r\n    };\r\n  }, []);\r\n\r\n  const LoaderContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 65vh;\r\n    position: relative;\r\n  `;\r\nconst snakeAnimation = keyframes`\r\n    0% {\r\n      transform: scaleX(0);\r\n    }\r\n    25% {\r\n      transform: scaleX(0.25);\r\n    }\r\n    50% {\r\n      transform: scaleX(0.75);\r\n    }\r\n    75% {\r\n      transform: scaleX(0.25);\r\n    }\r\n    100% {\r\n      transform: scaleX(0);\r\n    }\r\n  `;\r\n  const SnakeLoader = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 4px; /* Adjust the height of the loader bar */\r\n    width: 100%;\r\n    background-color: #2196F3; /* Blue color */\r\n    animation: snakeAnimation 3s linear infinite;\r\n  `;\r\n\r\n  \r\n\r\n  const LoadingSpinner = () => {\r\n    return (\r\n      <LoaderContainer>\r\n        <SnakeLoader />\r\n        <p>Loading...</p> {/* You can add a loading message */}\r\n      </LoaderContainer>\r\n    );\r\n  };\r\n\r\n  if (!isImageLoaded) {\r\n    // Render loading state or placeholder if the image is not loaded yet\r\n    return <div><LoadingSpinner /></div>;\r\n  }\r\n\r\n  // Render the StaticElementComponent with the children once the image is loaded\r\n  return (\r\n    <StaticElementComponent>\r\n      {children}\r\n    </StaticElementComponent>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,sBAAsB,QAAQ,sCAAsC;AAC7E,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,MAAMC,sBAAsB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzBD,KAAK,CAACE,GAAG,GAAGb,gBAAgB;IAC5BW,KAAK,CAACG,MAAM,GAAG,MAAM;MACnBJ,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAGd,MAAM,CAACe,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACH,MAAMC,cAAc,GAAGf,SAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,MAAMgB,WAAW,GAAGjB,MAAM,CAACe,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAID,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,oBACEf,OAAA,CAACW,eAAe;MAAAP,QAAA,gBACdJ,OAAA,CAACc,WAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfnB,OAAA;QAAAI,QAAA,EAAG;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEtB,CAAC;EAED,IAAI,CAACd,aAAa,EAAE;IAClB;IACA,oBAAOL,OAAA;MAAAI,QAAA,eAAKJ,OAAA,CAACe,cAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;;EAEA;EACA,oBACEnB,OAAA,CAACL,sBAAsB;IAAAS,QAAA,EACpBA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAChB,EAAA,CApEWF,sBAAsB;AAAAmB,EAAA,GAAtBnB,sBAAsB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}