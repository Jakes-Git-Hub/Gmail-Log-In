{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { FrontPageStaticContainer } from './containers/FrontPageStaticContainer';\nimport { StaticElementContainer } from \"./containers/StaticElementContainer\";\nimport { CreatePasswordStaticElementContainer } from \"./containers/CreatePasswordStaticElementContainer\";\nimport { LoginFormContainer } from \"./containers/LoginFormContainer\";\nimport { MockMailContainer } from \"./containers/MockMailContainer\";\nimport { CreateAccountContainer } from \"./containers/CreateAccountContainer\";\nimport { BirthdayAndGenderContainer } from \"./containers/BirthdayAndGenderContainer\";\nimport { ChooseYourGmailAddressContainer } from \"./containers/ChooseYourGmailAddressContainer\";\nimport { CreatePasswordContainer } from \"./containers/CreatePasswordContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport(Conf);\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentLoggedInUser, setCurrentLoggedInUser] = useState(null);\n  const [nextUserId, setNextUserId] = useState(1);\n  const [userData, setUserData] = useState({});\n  const handleLogin = (email, password) => {\n    console.log(\"Attempting login with:\", email, password);\n    const correctLoginCredentials = users.find(user => user.email === email && user.password === password);\n    if (correctLoginCredentials) {\n      setLoggedIn(true);\n      setCurrentLoggedInUser(correctLoginCredentials.email);\n      console.log(\"Logged in as:\", correctLoginCredentials.email);\n    } else {\n      console.log(\"Invalid credentials\");\n    }\n  };\n  const updateUser = data => {\n    setUserData(prevData => ({\n      ...prevData,\n      ...data\n    }));\n  };\n  const addUser = () => {\n    const newUser = {\n      id: nextUserId,\n      ...userData\n    };\n    setUsers(prevUsers => [...prevUsers, newUser]);\n    setUserData({}); // Clear temporary user data\n    setNextUserId(prevId => prevId + 1); // Increment nextUserId\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(FrontPageStaticContainer, {\n          children: /*#__PURE__*/_jsxDEV(LoginFormContainer, {\n            users: users,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mockmail\",\n        element: /*#__PURE__*/_jsxDEV(MockMailContainer, {\n          loggedIn: loggedIn,\n          currentLoggedInUser: currentLoggedInUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-account\",\n        element: /*#__PURE__*/_jsxDEV(StaticElementContainer, {\n          children: /*#__PURE__*/_jsxDEV(CreateAccountContainer, {\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/basic-information\",\n        element: /*#__PURE__*/_jsxDEV(StaticElementContainer, {\n          children: /*#__PURE__*/_jsxDEV(BirthdayAndGenderContainer, {\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/choose-your-gmail-address\",\n        element: /*#__PURE__*/_jsxDEV(StaticElementContainer, {\n          children: /*#__PURE__*/_jsxDEV(ChooseYourGmailAddressContainer, {\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-password\",\n        element: /*#__PURE__*/_jsxDEV(CreatePasswordStaticElementContainer, {\n          children: /*#__PURE__*/_jsxDEV(CreatePasswordContainer, {\n            updateUser: updateUser,\n            users: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/confirm-youre-not-a-robot\",\n        element: /*#__PURE__*/_jsxDEV(StaticElementContainer, {\n          children: /*#__PURE__*/_jsxDEV(ConfirmYoureNotARobotContainer, {\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"499+CvlYdReAk04Ked2sRVvIlYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","FrontPageStaticContainer","StaticElementContainer","CreatePasswordStaticElementContainer","LoginFormContainer","MockMailContainer","CreateAccountContainer","BirthdayAndGenderContainer","ChooseYourGmailAddressContainer","CreatePasswordContainer","jsxDEV","_jsxDEV","Conf","App","_s","loggedIn","setLoggedIn","users","setUsers","currentLoggedInUser","setCurrentLoggedInUser","nextUserId","setNextUserId","userData","setUserData","handleLogin","email","password","console","log","correctLoginCredentials","find","user","updateUser","data","prevData","addUser","newUser","id","prevUsers","prevId","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","ConfirmYoureNotARobotContainer","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { FrontPageStaticContainer } from './containers/FrontPageStaticContainer'\nimport { StaticElementContainer } from \"./containers/StaticElementContainer\";\nimport { CreatePasswordStaticElementContainer } from \"./containers/CreatePasswordStaticElementContainer\";\nimport { LoginFormContainer } from \"./containers/LoginFormContainer\";\nimport { MockMailContainer } from \"./containers/MockMailContainer\";\nimport { CreateAccountContainer } from \"./containers/CreateAccountContainer\";\nimport { BirthdayAndGenderContainer } from \"./containers/BirthdayAndGenderContainer\";\nimport { ChooseYourGmailAddressContainer } from \"./containers/ChooseYourGmailAddressContainer\";\nimport { CreatePasswordContainer } from \"./containers/CreatePasswordContainer\";\nimport (Conf)\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [currentLoggedInUser, setCurrentLoggedInUser] = useState(null);\n  const [nextUserId, setNextUserId] = useState(1);\n  const [userData, setUserData] = useState({});\n\n  const handleLogin = (email, password) => {\n    console.log(\"Attempting login with:\", email, password);\n    const correctLoginCredentials = users.find(\n      (user) => user.email === email && user.password === password\n    );\n\n    if (correctLoginCredentials) {\n      setLoggedIn(true);\n      setCurrentLoggedInUser(correctLoginCredentials.email);\n      console.log(\"Logged in as:\", correctLoginCredentials.email);\n    } else {\n      console.log(\"Invalid credentials\");\n    }\n  };\n\n  const updateUser = (data) => {\n    setUserData(prevData => ({ ...prevData, ...data }));\n  };\n\n  const addUser = () => {\n    const newUser = {\n      id: nextUserId,\n      ...userData\n    };\n    setUsers(prevUsers => [...prevUsers, newUser]);\n    setUserData({}); // Clear temporary user data\n    setNextUserId(prevId => prevId + 1); // Increment nextUserId\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n            <FrontPageStaticContainer>\n              <LoginFormContainer \n                users={users}\n                handleLogin={handleLogin}\n              />\n            </FrontPageStaticContainer>\n          } />\n        <Route \n          path=\"/mockmail\" \n          element={<MockMailContainer   \n                    loggedIn={loggedIn}\n                    currentLoggedInUser={currentLoggedInUser}\n                   />} \n        />\n        <Route path=\"/create-account\" element={\n            <StaticElementContainer>\n              <CreateAccountContainer \n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/basic-information\" element={\n            <StaticElementContainer>\n              <BirthdayAndGenderContainer\n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/choose-your-gmail-address\" element={\n            <StaticElementContainer>\n              <ChooseYourGmailAddressContainer\n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n        <Route path=\"/create-password\" element={\n            <CreatePasswordStaticElementContainer>\n              <CreatePasswordContainer\n                updateUser={updateUser} \n                users={users}\n              />\n            </CreatePasswordStaticElementContainer>\n          } \n        />\n        <Route path=\"/confirm-youre-not-a-robot\" element={\n            <StaticElementContainer>\n              <ConfirmYoureNotARobotContainer\n                updateUser={updateUser} \n              />\n            </StaticElementContainer>\n          } \n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}