{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\containers\\\\CreatePasswordContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { CreatePasswordComponent } from \"../components/CreatePasswordComponent\";\nimport useImagePreload from \"../hooks/useImagePreload\";\nimport errorImage from '../images/Daco_5575399.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreatePasswordContainer = _ref => {\n  _s();\n  let {\n    updateUser\n  } = _ref;\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordPlaceholder, setPasswordPlaceholder] = useState(\"Password\");\n  const [confirmPlaceholder, setConfirmPlaceholder] = useState(\"Confirm\");\n  const [passwordMismatchError, setPasswordMismatchError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [passwordEmpty, setPasswordEmpty] = useState(false);\n  const [confirmPasswordEmpty, setConfirmPasswordEmpty] = useState(false);\n  const [passwordAndConfirmEmpty, setPasswordAndConfirmEmpty] = useState(false);\n  const navigate = useNavigate();\n  const isImagePreloaded = useImagePreload(errorImage);\n\n  // Password\n\n  const handlePasswordClick = () => {\n    setPasswordPlaceholder(\"\");\n  };\n  const handlePasswordBlur = () => {\n    if (password === \"\") {\n      setPasswordPlaceholder(\"Password\");\n    }\n  };\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  // Confirm\n\n  const handleConfirmClick = () => {\n    setConfirmPlaceholder(\"\");\n  };\n  const handleConfirmBlur = () => {\n    if (confirmPassword === \"\") {\n      setConfirmPlaceholder(\"Confirm\");\n    }\n  };\n\n  // Error messages\n\n  const confirmYourPassword = () => {\n    if (password !== '' && confirmPassword === \"\") {\n      setConfirmPasswordEmpty(true);\n    } else {\n      setPasswordEmpty(false);\n    }\n  };\n  const passwordMismatch = () => {\n    if (password !== confirmPassword && confirmPassword !== '') {\n      setPasswordMismatchError(true);\n    }\n  };\n  const bothPasswordAndConfirmEmpty = () => {\n    if (password === '' && confirmPassword === '') {\n      setPasswordAndConfirmEmpty(true);\n    }\n  };\n\n  // Handle Next\n\n  const handleNextClick = () => {\n    if (password === confirmPassword && password !== '' && confirmPassword !== '') {\n      updateUser({\n        password: password\n      });\n      setPassword('');\n      setConfirmPassword('');\n      setPasswordMismatchError(false);\n      setConfirmPasswordEmpty(false);\n      navigate('/next');\n    } else if (password === '' && confirmPassword === '') {\n      bothPasswordAndConfirmEmpty();\n      const passwordInput = document.getElementById('passwordInput');\n      if (passwordInput) {\n        passwordInput.focus();\n      }\n    } else if (password !== '' && confirmPassword === \"\") {\n      confirmYourPassword();\n      const confirmPasswordInput = document.getElementById('confirmPasswordInput');\n      if (confirmPasswordInput) {\n        confirmPasswordInput.focus();\n      }\n    } else if (password !== confirmPassword && password !== \"\" && confirmPassword !== '') {\n      passwordMismatch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CreatePasswordComponent, {\n      password: password,\n      setPassword: setPassword,\n      confirmPassword: confirmPassword,\n      setConfirmPassword: setConfirmPassword,\n      passwordPlaceholder: passwordPlaceholder,\n      handlePasswordClick: handlePasswordClick,\n      handlePasswordBlur: handlePasswordBlur,\n      confirmPlaceholder: confirmPlaceholder,\n      handleConfirmClick: handleConfirmClick,\n      handleConfirmBlur: handleConfirmBlur,\n      handleNextClick: handleNextClick,\n      passwordMismatchError: passwordMismatchError,\n      showPassword: showPassword,\n      setShowPassword: setShowPassword,\n      togglePassword: handleTogglePassword,\n      confirmPasswordEmpty: confirmPasswordEmpty,\n      confirmYourPassword: confirmYourPassword,\n      passwordMismatch: passwordMismatch,\n      passwordAndConfirmEmpty: passwordAndConfirmEmpty,\n      isImagePreloaded: isImagePreloaded,\n      passwordEmpty: passwordEmpty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CreatePasswordContainer, \"ZO2bx6XvlVKkD8MnM2ZWPshyF2U=\", false, function () {\n  return [useNavigate, useImagePreload];\n});\n_c = CreatePasswordContainer;\nvar _c;\n$RefreshReg$(_c, \"CreatePasswordContainer\");","map":{"version":3,"names":["React","useState","useNavigate","CreatePasswordComponent","useImagePreload","errorImage","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePasswordContainer","_ref","_s","updateUser","password","setPassword","confirmPassword","setConfirmPassword","passwordPlaceholder","setPasswordPlaceholder","confirmPlaceholder","setConfirmPlaceholder","passwordMismatchError","setPasswordMismatchError","showPassword","setShowPassword","passwordEmpty","setPasswordEmpty","confirmPasswordEmpty","setConfirmPasswordEmpty","passwordAndConfirmEmpty","setPasswordAndConfirmEmpty","navigate","isImagePreloaded","handlePasswordClick","handlePasswordBlur","handleTogglePassword","handleConfirmClick","handleConfirmBlur","confirmYourPassword","passwordMismatch","bothPasswordAndConfirmEmpty","handleNextClick","passwordInput","document","getElementById","focus","confirmPasswordInput","children","togglePassword","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/containers/CreatePasswordContainer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CreatePasswordComponent } from \"../components/CreatePasswordComponent\";\r\nimport useImagePreload from \"../hooks/useImagePreload\";\r\nimport errorImage from '../images/Daco_5575399.png';\r\n\r\n\r\nexport const CreatePasswordContainer = ({ updateUser }) => {\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [passwordPlaceholder, setPasswordPlaceholder] = useState(\"Password\");\r\n    const [confirmPlaceholder, setConfirmPlaceholder] = useState(\"Confirm\");\r\n    const [passwordMismatchError, setPasswordMismatchError] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [passwordEmpty, setPasswordEmpty] = useState(false);\r\n    const [confirmPasswordEmpty, setConfirmPasswordEmpty] = useState(false);\r\n    const [passwordAndConfirmEmpty, setPasswordAndConfirmEmpty] = useState(false);\r\n     \r\n\r\n    const navigate = useNavigate();\r\n\r\n    const isImagePreloaded = useImagePreload(errorImage);\r\n    \r\n// Password\r\n\r\n    const handlePasswordClick = () => {\r\n        setPasswordPlaceholder(\"\");\r\n    };\r\n\r\n    const handlePasswordBlur = () => {\r\n        if (password === \"\") {\r\n            setPasswordPlaceholder(\"Password\");\r\n        }\r\n    };\r\n\r\n    const handleTogglePassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n// Confirm\r\n\r\n    const handleConfirmClick = () => {\r\n        setConfirmPlaceholder(\"\");\r\n    };\r\n\r\n    const handleConfirmBlur = () => {\r\n        if (confirmPassword === \"\") {\r\n          setConfirmPlaceholder(\"Confirm\");\r\n        }\r\n    };\r\n\r\n// Error messages\r\n\r\n    const confirmYourPassword = () => {\r\n        if (password !== '' && confirmPassword === \"\") {\r\n            setConfirmPasswordEmpty(true);\r\n        } else {\r\n            setPasswordEmpty(false);\r\n        }\r\n    };\r\n\r\n    const passwordMismatch = () => {\r\n        if (password !== confirmPassword && confirmPassword !== '') {\r\n            setPasswordMismatchError(true);\r\n        }\r\n    };\r\n\r\n    const bothPasswordAndConfirmEmpty = () => {\r\n        if (password === '' && confirmPassword === '') {\r\n            setPasswordAndConfirmEmpty(true);\r\n        } \r\n    };\r\n\r\n\r\n\r\n// Handle Next\r\n\r\n    const handleNextClick = () => {\r\n        if (password === confirmPassword && password !== '' && confirmPassword !== '') {\r\n        updateUser({ password: password });\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setPasswordMismatchError(false);\r\n        setConfirmPasswordEmpty(false);\r\n        navigate('/next');\r\n        } else if (password === '' && confirmPassword === '') {\r\n            bothPasswordAndConfirmEmpty();\r\n            const passwordInput = document.getElementById('passwordInput');\r\n            if (passwordInput) {\r\n                passwordInput.focus();\r\n            }\r\n        } else if (password !== '' && confirmPassword === \"\") {\r\n            confirmYourPassword();\r\n            const confirmPasswordInput = document.getElementById('confirmPasswordInput');\r\n            if (confirmPasswordInput) {\r\n                confirmPasswordInput.focus();\r\n            }\r\n        } else if (password !== confirmPassword && password !== \"\" && confirmPassword !== '') {\r\n            passwordMismatch();\r\n        }\r\n    };\r\n\r\n return(\r\n    <>\r\n        <CreatePasswordComponent\r\n            password={password}\r\n            setPassword={setPassword}\r\n            confirmPassword={confirmPassword}\r\n            setConfirmPassword={setConfirmPassword}\r\n            passwordPlaceholder={passwordPlaceholder}\r\n            handlePasswordClick={handlePasswordClick}\r\n            handlePasswordBlur={handlePasswordBlur}\r\n            confirmPlaceholder={confirmPlaceholder}\r\n            handleConfirmClick={handleConfirmClick}\r\n            handleConfirmBlur={handleConfirmBlur}\r\n            handleNextClick={handleNextClick}\r\n            passwordMismatchError={passwordMismatchError}\r\n            showPassword={showPassword}\r\n            setShowPassword={setShowPassword}\r\n            togglePassword={handleTogglePassword}\r\n            confirmPasswordEmpty={confirmPasswordEmpty}\r\n            confirmYourPassword={confirmYourPassword}\r\n            passwordMismatch={passwordMismatch}\r\n            passwordAndConfirmEmpty={passwordAndConfirmEmpty}\r\n            isImagePreloaded={isImagePreloaded}\r\n            passwordEmpty={passwordEmpty}\r\n        />\r\n    </>\r\n );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}