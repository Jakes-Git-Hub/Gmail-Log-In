{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacma\\\\OneDrive\\\\Desktop\\\\Jake's Folder\\\\Coding Projects\\\\Google Log In\\\\src\\\\containers\\\\AddRecoveryEmailContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { AddRecoveryEmailComponent } from \"../components/AddRecoveryEmailComponent\";\nimport useImagePreload from \"../hooks/useImagePreload\";\nimport errorImage from '../images/Daco_5575399.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddRecoveryEmailContainer = _ref => {\n  _s();\n  let {\n    updateUser\n  } = _ref;\n  const [recoveryEmail, setRecoveryEmail] = useState(\"\");\n  const [recoveryEmailPlaceholder, setRecoveryEmailPlaceholder] = useState(\"Recovery email address\");\n  const [errorCondition, setErrorCondition] = useState(null);\n  const navigate = useNavigate();\n  const isImagePreloaded = useImagePreload(errorImage);\n\n  // Recovery Email\n\n  const handleRecoveryEmailClick = () => {\n    setRecoveryEmailPlaceholder(\"\");\n  };\n  const handleRecoveryEmailBlur = () => {\n    if (recoveryEmail === \"\") {\n      setRecoveryEmailPlaceholder(\"Recovery email address\");\n    }\n  };\n\n  // Handle Next\n\n  const handleNextClick = () => {\n    const isEmailValid = input => {\n      const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n      return emailPattern.test(input);\n    };\n    const isAtSymbolThere = input => {\n      return /^[A-Za-z0-9._%+-]+@$/g.test(input);\n    };\n    const isEmailValid2 = input => {\n      return /^[A-Za-z0-9._%+-]+@$/g.test(input);\n    };\n    const isDomainNameNotThere = input => {\n      return /^[A-Za-z0-9._%+-]+@$/g.test(input);\n    };\n    if (isEmailValid(recoveryEmail)) {\n      updateUser({\n        recoveryEmail: recoveryEmail\n      });\n      setRecoveryEmail('');\n      setErrorCondition(null);\n      navigate('/confirm-youre-not-a-robot');\n    } else if (recoveryEmail === '') {\n      setErrorCondition('enterValidEmail');\n      const recoveryEmailInput = document.getElementById('recoveryEmailInput');\n      if (recoveryEmailInput) {\n        recoveryEmailInput.focus();\n      }\n    } else if (!isAtSymbolThere(recoveryEmail)) {\n      setErrorCondition('dontForgetAtSymbol');\n      const recoveryEmailInput = document.getElementById('recoveryEmailInput');\n      if (recoveryEmailInput) {\n        recoveryEmailInput.focus();\n      }\n    } else if (isDomainNameNotThere(recoveryEmail)) {\n      setErrorCondition('enterADomainName');\n      const recoveryEmailInput = document.getElementById('recoveryEmailInput');\n      if (recoveryEmailInput) {\n        recoveryEmailInput.focus();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AddRecoveryEmailComponent, {\n      recoveryEmail: recoveryEmail,\n      setRecoveryEmail: setRecoveryEmail,\n      recoveryEmailPlaceholder: recoveryEmailPlaceholder,\n      handleRecoveryEmailClick: handleRecoveryEmailClick,\n      handleRecoveryEmailBlur: handleRecoveryEmailBlur,\n      handleNextClick: handleNextClick,\n      isImagePreloaded: isImagePreloaded,\n      errorCondition: errorCondition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(AddRecoveryEmailContainer, \"YbmES65BUWczL6rrh8J+JfLV68I=\", false, function () {\n  return [useNavigate, useImagePreload];\n});\n_c = AddRecoveryEmailContainer;\nvar _c;\n$RefreshReg$(_c, \"AddRecoveryEmailContainer\");","map":{"version":3,"names":["React","useState","useNavigate","AddRecoveryEmailComponent","useImagePreload","errorImage","jsxDEV","_jsxDEV","Fragment","_Fragment","AddRecoveryEmailContainer","_ref","_s","updateUser","recoveryEmail","setRecoveryEmail","recoveryEmailPlaceholder","setRecoveryEmailPlaceholder","errorCondition","setErrorCondition","navigate","isImagePreloaded","handleRecoveryEmailClick","handleRecoveryEmailBlur","handleNextClick","isEmailValid","input","emailPattern","test","isAtSymbolThere","isEmailValid2","isDomainNameNotThere","recoveryEmailInput","document","getElementById","focus","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jacma/OneDrive/Desktop/Jake's Folder/Coding Projects/Google Log In/src/containers/AddRecoveryEmailContainer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AddRecoveryEmailComponent } from \"../components/AddRecoveryEmailComponent\";\r\nimport useImagePreload from \"../hooks/useImagePreload\";\r\nimport errorImage from '../images/Daco_5575399.png';\r\n\r\nexport const AddRecoveryEmailContainer = ({ updateUser }) => {\r\n\r\n    const [recoveryEmail, setRecoveryEmail] = useState(\"\");\r\n    const [recoveryEmailPlaceholder, setRecoveryEmailPlaceholder] = useState(\"Recovery email address\");\r\n    const [errorCondition, setErrorCondition] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const isImagePreloaded = useImagePreload(errorImage);\r\n    \r\n// Recovery Email\r\n\r\n    const handleRecoveryEmailClick = () => {\r\n        setRecoveryEmailPlaceholder(\"\");\r\n    };\r\n\r\n    const handleRecoveryEmailBlur = () => {\r\n        if (recoveryEmail === \"\") {\r\n            setRecoveryEmailPlaceholder(\"Recovery email address\"); \r\n        }\r\n    };\r\n\r\n// Handle Next\r\n\r\n    const handleNextClick = () => {\r\n        const isEmailValid = input => {\r\n            const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\r\n            return emailPattern.test(input);\r\n        };\r\n\r\n        const isAtSymbolThere = input => {\r\n            return /^[A-Za-z0-9._%+-]+@$/g.test(input);\r\n        }\r\n\r\n        const isEmailValid2 = input => {\r\n            return /^[A-Za-z0-9._%+-]+@$/g.test(input);\r\n        };\r\n\r\n        const isDomainNameNotThere = input => {\r\n            return /^[A-Za-z0-9._%+-]+@$/g.test(input);\r\n        }\r\n    \r\n        if (isEmailValid(recoveryEmail)) {\r\n            updateUser({ recoveryEmail: recoveryEmail });\r\n            setRecoveryEmail('');\r\n            setErrorCondition(null);\r\n            navigate('/confirm-youre-not-a-robot');\r\n        } else if (recoveryEmail === '') {\r\n            setErrorCondition('enterValidEmail');\r\n            const recoveryEmailInput = document.getElementById('recoveryEmailInput');\r\n            if (recoveryEmailInput) {\r\n                recoveryEmailInput.focus();\r\n            }    \r\n        } else if (!isAtSymbolThere(recoveryEmail)) {\r\n            setErrorCondition('dontForgetAtSymbol');\r\n            const recoveryEmailInput = document.getElementById('recoveryEmailInput');\r\n            if (recoveryEmailInput) {\r\n                recoveryEmailInput.focus();\r\n            }   \r\n        } else if (isDomainNameNotThere(recoveryEmail)) {\r\n            setErrorCondition('enterADomainName');\r\n            const recoveryEmailInput = document.getElementById('recoveryEmailInput');\r\n            if (recoveryEmailInput) {\r\n                recoveryEmailInput.focus();\r\n            }   \r\n        } \r\n    };\r\n\r\n return(\r\n    <>\r\n        <AddRecoveryEmailComponent\r\n            recoveryEmail={recoveryEmail}\r\n            setRecoveryEmail={setRecoveryEmail}\r\n            recoveryEmailPlaceholder={recoveryEmailPlaceholder}\r\n            handleRecoveryEmailClick={handleRecoveryEmailClick}\r\n            handleRecoveryEmailBlur={handleRecoveryEmailBlur}\r\n            handleNextClick={handleNextClick}\r\n            isImagePreloaded={isImagePreloaded}\r\n            errorCondition={errorCondition}\r\n        />\r\n    </>\r\n );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}